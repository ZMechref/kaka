{"version":3,"file":"static/js/604.a23a011c.chunk.js","mappings":"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","sources":["MainScreen/Managment.js","../node_modules/react-bootstrap/esm/DropdownButton.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, { Component ,useState} from \"react\";\nimport { MainContext } from \"../core/MainContext\";\nimport { CONFIG } from \"../helpers/configFb\";\nimport DEMO from \"../store/constant\";\nimport {\n  Card,\n  Table,\n  Button,\n  InputGroup,\n  Form,\n  DropdownButton,\n  Dropdown,\n  Modal,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport {\n  findWoForAdmin,\n  findWoByNumber,\n  findWoForCurrentUser,\n  updateDispatcherData,\n} from \"../helpers/fireStoreMain\";\nimport { initializeApp } from \"firebase/app\";\nimport { doc, getFirestore, updateDoc } from \"firebase/firestore\";\nimport { map } from \"jquery\";\nimport {\n  getJobs,\n  handleDeleteJob,\n  setJob,\n  updateAssignedTo,\n  updateDispatcher,\n  updateManager,\n} from \"../helpers/fireStoreMain\";\n\nconst app = initializeApp(CONFIG.firebaseConfig);\nconst db = getFirestore(app);\n\nclass Management extends Component {\n  static contextType = MainContext;\n  constructor(props) {\n    super(props);\n\n    // Get today's date\n    const today = new Date();\n    const formattedDate = today.toISOString().substr(0, 10);\n\n    this.state = {\n      datta: [\n        {\n          woNum: \"\",\n          streetAddress:\"\",\n          joblocation: \"\",\n          jobZip: \"\",\n          jobState: \"\",\n          estimNeeded: \"\",\n          contact: \"\",\n          trade: \"\",\n          nte: \"\",\n          ivrcode: \"\",\n          ivrNumb: \"\",\n          poNumb: \"\",\n          clientName: \"\",\n          submdate: formattedDate,\n          neededdate: \"\",\n          urgency: \"\",\n          callerName: \"\",\n          callerNumber: \"\",\n          jobdescr: \"\",\n        },\n      ],\n      itemToEdit: [\n        {\n          status: \"ghgh\",\n          woNum: \"John Doe\",\n          streetAddress:\"3700 massachusettes Ave Nw \",\n          joblocation: \"28\",\n          jobZip: \"20016\",\n          jobState: \"DC\",\n          estimNeeded: \"false\",\n          contact: \"New York\",\n          trade: \"1\",\n          nte: \"2\",\n          ivrcode: \"3\",\n          ivrNumb: \"12\",\n          poNumb: \"4\",\n          clientName: \"5\",\n          submdate: \"6\",\n          neededdate: \"7\",\n          urgency: \"8\",\n          callerName: \"9\",\n          callerNumber: \"11\",\n          jobdescr: \"10\",\n        },\n      ],\n\n      selectedUser: { selectedtype: \"Select Dispatcher\" },\n\n      woNum: \"\",\n\n      jobZip: \"\", \n      joblocation:\"\",\n      streetAddress:\"\",\n      jobState: \"\",\n      estimNeeded: true,\n      contact: \"\",\n      trade: \"\",\n      nte: \"\",\n      ivrcode: \"\",\n      ivrNumb: \"\",\n      poNumb: \"\",\n      clientName: \"\",\n      neededdate: \"\",\n      urgency: \"\",\n      callerName: \"\",\n      callerNumber: \"\",\n      jobdescr: \"\",\n      jobList: [],\n      showModal: false,\n      openAddWO: false,\n      showDetailModal: false,\n      selectedMan: \"\",\n      selectedDisp: \"\",\n      selectedTeamLeader: \"\",\n      selectedStatus: \"\",\n      currentUser: \"manager\",\n      selectedUName: \"Select Assignee\",\n      selectedUserClient: \"Select Assignee\",\n      selectedIndex: \"0\",\n      isDragging: false,\n      submdate: formattedDate,\n      initialPosition: { x: 0, y: 0 },\n      modalPosition: { x: 0, y: 0 },\n    };\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  componentDidMount = async () => {\n    const context = this.context;\n    const jobList = await getJobs();\n    this.setState({ jobList });\n  };\n  handleZipcodeChange = async (event) => {\n    const { value } = event.target;\n    this.setState({ jobZip: value });\n\n    if (value.length === 5 && /^\\d+$/.test(value)) {\n      try {\n        const response = await fetch(`https://api.zippopotam.us/us/${value}`);\n        const data = await response.json();\n\n        if (data.places && data.places.length > 0) {\n          const city = data.places[0]['place name'];\n          const state = data.places[0].state;\n          this.setState({\n            joblocation: city,\n            jobState: state\n          });\n        } else {\n          this.setState({\n            jobLocation: '',\n            jobState: ''\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    } else {\n      this.setState({\n        jobLocation: '',\n        jobState: ''\n      });\n    }\n  };\n\n\n  async handleFormSubmit(event) {\n    event.preventDefault(); // prevent the page from reloading\n    // create a new object with the data from the input fields\n    const jobLocationString = `${this.state.streetAddress} ${this.state.jobState} ${this.state.jobZip}`;\n    const newItem = {\n      woNum: this.state.woNum,\n      manager: this.context.currentUser,\n      teamLeader: this.state.selectedTeamLeader,\n      dispatcher: this.state.selectedUser.uid,\n      status: this.state.selectedStatus,\n      assignedTo: this.state.selectedUser,\n      assignedby: this.state.currentUser,\n      //jobData\n      jobData: {\n        joblocation: jobLocationString,\n        jobZip: this.state.jobZip,\n        jobState: this.state.jobState,\n        streetAddress: this.state.streetAddress,\n        estimNeeded: this.state.estimNeeded,\n        contact: this.state.contact,\n        trade: this.state.trade,\n        nte: this.state.nte,\n        ivrcode: this.state.ivrcode,\n        ivrNumb: this.state.ivrNumb,\n        poNumb: this.state.poNumb,\n        clientName: this.state.clientName,\n        submdate: this.state.submdate,\n        neededdate: this.state.neededdate,\n        urgency: this.state.urgency,\n        callerName: this.state.callerName,\n        callerNumber: this.state.callerNumber,\n        jobdescr: this.state.jobdescr,\n      },\n      //teamLeaderData\n      teamLeaderData: {\n        dispatcher: \"\",\n      },\n      //dispatcherData\n      dispatcherData: {\n        estimTechName: \"\",\n        estimTechCon: \"\",\n        estimTechproffesion: \"\",\n        estimDate: \"\",\n        estimTime: \"\",\n        estimCost: \"\",\n        estimPaidby: \"\",\n        estimPaymentAdress: \"\",\n        estimTechDescription: \"\",\n        estimscheduleddate: \"\",\n        estimscheduledtimee: \"\",\n        \n        jobDoneTechId:\"\",\n        estimTechId:\"\",\n\n        jobDoneTechName: \"\",\n        jobDoneTechCon: \"\",\n        jobdoneTechproffesion: \"\",\n        jobDoneDate: \"\",\n        jobDoneTime: \"\",\n        jobDoneCost: \"\",\n        jobDonePaidby: \"\",\n        jobDonePaymentAdress: \"\",\n        jobDoneHours: \"\",\n        jobDoneTechDescription: \"\",\n        suppliyer: \"\",\n        otherSuppliyer: \"\",\n        material: \"\",\n        jobdonescheduledate: \"\",\n        jobdonescheduledtime: \"\",\n      },\n    };\n    setJob(newItem).then(async (id) => {\n      const docId = doc(db, \"Jobs\", id);\n      await updateDoc(docId, {\n        jobId: id,\n      });\n      const jobList = await getJobs();\n      this.setState({ jobList });\n    });\n    // add the new item to the datta array\n    this.setState({\n      datta: [...this.state.datta, newItem],\n      woNum: \"\",\n      joblocation: \"\",\n      streetAddress:\"\",\n      jobZip: \"\",\n      jobState: \"\",\n      estimNeeded: \"false\",\n      // \" estimationNeeded | estimationScheduled | quotationPending  | jobDoneNeeded |  jobDoneScheduled | invoiced\",\n      contact: \"\",\n      trade: \"\",\n      nte: \"\",\n      ivrcode: \"\",\n      ivrNumb: \"\",\n      poNumb: \"\",\n      clientName: \"\",\n      submdate: \"\",\n      urgency: \"\",\n      callerName: \"\",\n      callerNumber: \"\",\n      jobdescr: \"\",\n    });\n  }\n  handleDeleteJob = () => {};\n\n  handleClose = () => {\n    this.setState({ showModal: false });\n    this.setState({ openAddWO: false });\n    this.setState({ showDetailModal: false });\n  };\n\n  openModal = () => {\n    this.setState({ showModal: true });\n  };\n  openAddWO = () => {\n    this.setState({ openAddWO: true });\n  };\n  showDetailModal = () => {\n    this.setState({ showDetailModal: true });\n  };\n\n  render() {\n    const context = this.context;\n    \n    const {\n      datta,\n      woNum,\n      joblocation,\n      jobZip,\n      jobState,\n      streetAddress,\n      estimNeeded,\n      contact,\n      trade,\n      nte,\n      ivrcode,\n      ivrNumb,\n      poNumb,\n      clientName,\n      submdate,\n      neededdate,\n      urgency,\n      callerName,\n      callerNumber,\n      jobdescr,\n      showModal,\n    } = this.state;\n    return (\n      <div>\n        <Col>\n          <Col>\n          <Modal\n  centered={true}\n  style={{\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"center\",\n  }}\n  show={this.state.showDetailModal}\n  onHide={this.handleClose}\n>\n  <Modal.Header\n    closeButton\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      backgroundColor: \"white\",\n      width: \"180%\",\n    }}\n  >\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        backgroundColor: \"white\",\n      }}\n    >\n      <table>\n        <thead>\n          <tr style={{ backgroundColor: \"white\" }}>\n            <th>Estimation</th>\n            <th>{\"===============>\"}</th>\n            <th>Quotation</th>\n            <th>{\"===============>\"}</th>\n            <th>JobDone</th>\n            <th>{\"===============>\"}</th>\n            <th>Invoicing</th>\n            <th>{\"===============>\"}</th>\n            <th>COMPLETED</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.jobList.map((item, index) => {\n            return (\n              <tr\n                key={index}\n                onClick={() => {\n                  this.setState({\n                    closeJobItemModal: true,\n                    selectedJob: item,\n                  });\n                }}\n              >\n                <td>{item.data.woNum}</td>\n                <td>{item.data.jobData.joblocation}</td>\n                <td>{item.data.jobData.contact}</td>\n                <td>{item.data.jobData.trade}</td>\n                <td\n                  style={{\n                    paddingTop: \"3px\",\n                    display: \"flex\",\n                  }}\n                ></td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  </Modal.Header>\n</Modal>\n\n            {/* {heda te3 display jobdata} */}\n            <Modal\n              style={{\n                marginLeft: \"-3%\",\n              }}\n              show={this.state.openAddWO}\n              onHide={this.handleClose}\n              centered={true}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"left\",\n                  width: \"180%\",\n                  backgroundColor: \"white\",\n                }}\n              >\n                <Modal.Header\n                  style={{\n                    // marginLeft: \"30%\",\n                    display: \"flex\",\n                    flexDirection: \"column`\",\n                    justifyContent: \"center\",\n                  }}\n                  closeButton\n                >\n                  <Modal.Title as=\"h5\">Add New Work Order</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"px-4 py-2\">\n                  <Form onSubmit={this.handleFormSubmit}>\n                    <Row>\n                      <Col md={6}>\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                          <div className=\"mb-6\" md={6}>\n                            <div className=\"input-group mb-3\">\n                              <span\n                                style={{ width: \"40%\" }}\n                                className=\"input-group-text align-items-center\"\n                                id=\"wo-number-label\"\n                              >\n                                Wo #\n                              </span>\n                              <input\n                                style={{ backgroundColor: \"whitesmoke\" }}\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Enter wo Number...\"\n                                aria-label=\"WoNumber\"\n                                aria-describedby=\"woNumber-label\"\n                                value={woNum}\n                                onChange={(event) =>\n                                  this.setState({ woNum: event.target.value })\n                                }\n                              />\n                            </div>\n                            \n                            <div>\n        <div className=\"input-group mb-3\">\n          <span\n            style={{ width: \"40%\" }}\n            className=\"input-group-text\"\n            id=\"job-location-label\"\n          >\n            Job Zip\n          </span>\n          <input\n            style={{ backgroundColor: \"whitesmoke\" }}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter job Zip...\"\n            aria-label=\"jobZip\"\n            aria-describedby=\"jobzip-label\"\n            value={jobZip}\n            onChange={this.handleZipcodeChange}\n          />\n        </div>\n        \n        <div className=\"input-group mb-3\">\n                              <span\n                                style={{ width: \"40%\" }}\n                                className=\"input-group-text\"\n                                id=\"address street-label\"\n                              >\n                                Address street\n                              </span>\n                              <input\n                                style={{ backgroundColor: \"whitesmoke\" }}\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Enter Street Address...\"\n                                aria-label=\"StreetAddress\"\n                                aria-describedby=\"streetAddress-label\"\n                                value={streetAddress}\n                                onChange={(event) =>\n                                  this.setState({ streetAddress: event.target.value })\n                                }\n                              />\n                            </div>\n\n        <div className=\"input-group mb-3\">\n          <span\n            style={{ width: \"40%\" }}\n            className=\"input-group-text\"\n            id=\"job-location-label\"\n          >\n            Job Location\n          </span>\n          <input\n            style={{ backgroundColor: \"whitesmoke\" }}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter job location...\"\n            aria-label=\"JobLocation\"\n            aria-describedby=\"joblocation-label\"\n            value={joblocation}\n            readOnly\n          />\n        </div>\n\n        <div className=\"input-group mb-3\">\n          <span\n            style={{ width: \"40%\" }}\n            className=\"input-group-text\"\n            id=\"job-location-label\"\n          >\n            Job state\n          </span>\n          <input\n            style={{ backgroundColor: \"whitesmoke\" }}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter job State...\"\n            aria-label=\"jobState\"\n            aria-describedby=\"jobstate-label\"\n            value={jobState}\n            readOnly\n          />\n        </div>\n      </div>\n\n                            <div className=\"input-group mb-3\">\n                              <span\n                                style={{ width: \"40%\" }}\n                                className=\"input-group-text\"\n                                id=\"contact-label\"\n                              >\n                                Contact\n                              </span>\n                              <input\n                                style={{ backgroundColor: \"whitesmoke\" }}\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Enter phone number...\"\n                                aria-label=\"Contact\"\n                                aria-describedby=\"contact-label\"\n                                value={contact}\n                                onChange={(event) =>\n                                  this.setState({ contact: event.target.value })\n                                }\n                              />\n                            </div>\n                            <div\n                              style={{ width: \"100%\" }}\n                              className=\"input-group mb-3\"\n                            >\n                              <span\n                                style={{ width: \"40%\" }}\n                                className=\"input-group-text\"\n                                id=\"trade-label\"\n                              >\n                                Trade\n                              </span>\n                              <input\n                                style={{ backgroundColor: \"whitesmoke\" }}\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Enter Trade type...\"\n                                aria-label=\"Trade\"\n                                aria-describedby=\"trade-label\"\n                                value={trade}\n                                onChange={(event) =>\n                                  this.setState({ trade: event.target.value })\n                                }\n                              />\n                            </div>\n                            <div className=\"input-group mb-3\">\n                              <span\n                                style={{ width: \"40%\" }}\n                                className=\"input-group-text\"\n                                id=\"neededdate-label\"\n                              >\n                                Needed date\n                              </span>\n                              <input\n                                style={{ backgroundColor: \"whitesmoke\" }}\n                                type=\"date\"\n                                className=\"form-control\"\n                                placeholder=\"Enter Needed Date...\"\n                                aria-label=\"NeededDate\"\n                                aria-describedby=\"neededdate-label\"\n                                value={neededdate}\n                                onChange={(event) =>\n                                  this.setState({\n                                    neededdate: event.target.value,\n                                  })\n                                }\n                              />\n                            </div>\n                            <div\n                              style={{ width: \"100%\" }}\n                              className=\"input-group mb-3\"\n                            >\n                              <span\n                                style={{ width: \"40%\" }}\n                                className=\"input-group-text\"\n                                id=\"submdate-label\"\n                              >\n                                Submitted Date\n                              </span>\n                              <input\n                                style={{ backgroundColor: \"whitesmoke\" }}\n                                type=\"date\"\n                                className=\"form-control\"\n                                placeholder=\"Enter Submitted Date...\"\n                                aria-label=\"Submitteddate\"\n                                aria-describedby=\"submdate-label\"\n                                value={submdate}\n                                onChange={(event) =>\n                                  this.setState({\n                                    submdate: event.target.value,\n                                  })\n                                }\n                              />\n                            </div>\n                            <div\n                              style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"center\",\n                              }}\n                            >\n                              <Form.Group\n                                style={{ marginTop: \"3%\", width: \"50%\" }}\n                              >\n                                <Form.Check\n                                  style={{ transform: \"scale(1.3)\" }} // corrected scale attribute\n                                  onChange={(e) => {\n                                    const isChecked = e.target.checked;\n                                    let updatedJobStatus = isChecked\n                                      ? \"estimationNeeded\"\n                                      : \"jobDoneNeeded\";\n\n                                    // Check if isChecked is false and set jobStatus to 'jobDoneNeeded'\n                                    if (!isChecked) {\n                                      updatedJobStatus = \"jobDoneNeeded\";\n                                    }\n\n                                    this.setState({\n                                      estimNeeded: isChecked,\n                                      selectedStatus: updatedJobStatus,\n                                    });\n                                  }}\n                                  custom\n                                  type=\"checkbox\"\n                                  id=\"checkbox1\"\n                                  label=\"Estimation Needed\"\n                                />\n                              </Form.Group>\n\n                              <p style={{ marginLeft: \"-25%\", color: \"red\" }}>\n                                {this.state.errorMessage}\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n\n                      <Col md={6}>\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                          <div>\n                            <div className=\"mb-6\" md={6}>\n                              <div\n                                style={{ width: \"100%\" }}\n                                className=\"input-group mb-3\"\n                              >\n                                <span\n                                  style={{ width: \"40%\" }}\n                                  className=\"input-group-text\"\n                                  id=\"nte-label\"\n                                >\n                                  NTE\n                                </span>\n                                <input\n                                  style={{ backgroundColor: \"whitesmoke\" }}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder=\"Enter nte...\"\n                                  aria-label=\"NTE\"\n                                  aria-describedby=\"nte-label\"\n                                  value={nte}\n                                  onChange={(event) =>\n                                    this.setState({ nte: event.target.value })\n                                  }\n                                />\n                              </div>\n\n                              <div\n                                style={{ width: \"100%\" }}\n                                className=\"input-group mb-3\"\n                              >\n                                <span\n                                  style={{ width: \"40%\" }}\n                                  className=\"input-group-text\"\n                                  id=\"ivrcode-label\"\n                                >\n                                  Ivr Code\n                                </span>\n                                <input\n                                  style={{ backgroundColor: \"whitesmoke\" }}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder=\"Enter ivr code...\"\n                                  aria-label=\"IvrCode\"\n                                  aria-describedby=\"ivrcode-label\"\n                                  value={ivrcode}\n                                  onChange={(event) =>\n                                    this.setState({\n                                      ivrcode: event.target.value,\n                                    })\n                                  }\n                                />\n                              </div>\n                              <div\n                                style={{ width: \"100%\" }}\n                                className=\"input-group mb-3\"\n                              >\n                                <span\n                                  style={{ width: \"40%\" }}\n                                  className=\"input-group-text\"\n                                  id=\"ivrNumb-label\"\n                                >\n                                  Ivr Number\n                                </span>\n                                <input\n                                  style={{ backgroundColor: \"whitesmoke\" }}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder=\"Enter ivr Number...\"\n                                  aria-label=\"IvrNumber\"\n                                  aria-describedby=\"ivrnumber-label\"\n                                  value={ivrNumb}\n                                  onChange={(event) =>\n                                    this.setState({\n                                      ivrNumb: event.target.value,\n                                    })\n                                  }\n                                />\n                              </div>\n\n                              <div\n                                style={{ width: \"100%\" }}\n                                className=\"input-group mb-3\"\n                              >\n                                <span\n                                  style={{ width: \"40%\" }}\n                                  className=\"input-group-text\"\n                                  id=\"poNumb-label\"\n                                >\n                                  Po Number\n                                </span>\n                                <input\n                                  style={{ backgroundColor: \"whitesmoke\" }}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder=\"Enter Po Number...\"\n                                  aria-label=\"PoNumber\"\n                                  aria-describedby=\"ponumber-label\"\n                                  value={poNumb}\n                                  onChange={(event) => {\n                                    this.setState({\n                                      poNumb: event.target.value,\n                                    });\n                                  }}\n                                />\n                              </div>\n\n                              <div\n                                style={{ width: \"100%\" }}\n                                className=\"input-group mb-3\"\n                              >\n                                <span\n                                  style={{ width: \"40%\" }}\n                                  className=\"input-group-text\"\n                                  id=\"clientname-label\"\n                                >\n                                  Client Name\n                                </span>\n                                <input\n                                  style={{ backgroundColor: \"whitesmoke\" }}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder=\"Enter client name...\"\n                                  aria-label=\"ClientName\"\n                                  aria-describedby=\"clientname-label\"\n                                  value={clientName}\n                                  onChange={(event) =>\n                                    this.setState({\n                                      clientName: event.target.value,\n                                    })\n                                  }\n                                />\n                              </div>\n\n                              <div\n                                style={{ width: \"100%\" }}\n                                className=\"input-group mb-3\"\n                              >\n                                <span\n                                  style={{ width: \"40%\" }}\n                                  className=\"input-group-text\"\n                                  id=\"urgency-label\"\n                                >\n                                  Urgency\n                                </span>\n                                <input\n                                  style={{ backgroundColor: \"whitesmoke\" }}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder=\"Enter Urgency...\"\n                                  aria-label=\"Urgency\"\n                                  aria-describedby=\"urgency-label\"\n                                  value={urgency}\n                                  onChange={(event) =>\n                                    this.setState({\n                                      urgency: event.target.value,\n                                    })\n                                  }\n                                />\n                              </div>\n\n                              <div\n                                style={{ width: \"100%\" }}\n                                className=\"input-group mb-3\"\n                              >\n                                <span\n                                  style={{ width: \"40%\" }}\n                                  className=\"input-group-text\"\n                                  id=\"callername-label\"\n                                >\n                                  Caller Name\n                                </span>\n                                <input\n                                  style={{ backgroundColor: \"whitesmoke\" }}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder=\"Enter Caller Name...\"\n                                  aria-label=\"CallerName\"\n                                  aria-describedby=\"callername-label\"\n                                  value={callerName}\n                                  onChange={(event) =>\n                                    this.setState({\n                                      callerName: event.target.value,\n                                    })\n                                  }\n                                />\n                              </div>\n\n                              <div\n                                style={{ width: \"100%\" }}\n                                className=\"input-group mb-3\"\n                              >\n                                <span\n                                  style={{ width: \"40%\" }}\n                                  className=\"input-group-text\"\n                                  id=\"callernumber-label\"\n                                >\n                                  Caller Number\n                                </span>\n                                <input\n                                  style={{ backgroundColor: \"whitesmoke\" }}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder=\"Enter Caller Number...\"\n                                  aria-label=\"CallerNumber\"\n                                  aria-describedby=\"callernumber-label\"\n                                  value={callerNumber}\n                                  onChange={(event) =>\n                                    this.setState({\n                                      callerNumber: event.target.value,\n                                    })\n                                  }\n                                />\n                              </div>\n\n                              <div\n                                style={{ width: \"100%\" }}\n                                className=\"input-group mb-3\"\n                              >\n                                <span\n                                  style={{ width: \"40%\" }}\n                                  className=\"input-group-text\"\n                                  id=\"jobdescr-label\"\n                                >\n                                  Job Description\n                                </span>\n                                <input\n                                  style={{ backgroundColor: \"whitesmoke\" }}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder=\"Enter Detailled job description...\"\n                                  aria-label=\"JobDescription\"\n                                  aria-describedby=\"jobdescr-label\"\n                                  value={jobdescr}\n                                  onChange={(event) =>\n                                    this.setState({\n                                      jobdescr: event.target.value,\n                                    })\n                                  }\n                                />\n                              </div>\n                            </div>{\" \"}\n                          </div>\n                        </div>\n                      </Col>\n                      <div\n                        style={{\n                          width: \"100%\",\n                          marginLeft: \"10%\",\n                        }}\n                        className=\"input-group mb-3\"\n                      >\n                        <DropdownButton\n                          key={1}\n                          style={{}}\n                          onSelect={(e) => {\n                         \n                            let selected = \"\";\n                            if (e.includes(\"dispatcher\")) {\n                              selected = context.dispatchersList[e[0]];\n                            } else {\n                              selected = context.teamLeadersList[e[0]];\n                            }\n\n                            this.setState(\n                              {\n                                selectedUser: selected,\n                                selectedUName:\n                                  selected.name + selected.lastName,\n                              },\n                              () => {\n                              \n                              }\n                            );\n                          }}\n                          title={this.state.selectedUName}\n                        >\n                          {context.teamLeadersList && (\n                            <React.Fragment>\n                              <Dropdown.Header>Team leaders</Dropdown.Header>\n                              <Dropdown.Divider />\n                              {context.teamLeadersList.map((item, index) => (\n                                <Dropdown.Item\n                                  key={`teamLeader-${item.id}`}\n                                  eventKey={`${index}-teamLeader`}\n                                >\n                                  {item.name} {item.lastName}\n                                </Dropdown.Item>\n                              ))}\n                            </React.Fragment>\n                          )}\n\n                          {context.dispatchersList && (\n                            <React.Fragment>\n                              <Dropdown.Header>Dispatchers</Dropdown.Header>\n                              <Dropdown.Divider />\n                              {context.dispatchersList.map((item, index) => (\n                                <Dropdown.Item\n                                  key={`dispatcher-${item.id}`}\n                                  eventKey={`${index}-dispatcher`}\n                                >\n                                  {item.name} {item.lastName}\n                                </Dropdown.Item>\n                              ))}\n                            </React.Fragment>\n                          )}\n                        </DropdownButton>\n\n                        <button\n                          style={{ marginLeft: \"20%\" }}\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                        >\n                          Submit\n                        </button>\n                      </div>\n                    </Row>\n                  </Form>\n                </Modal.Body>{\" \"}\n              </div>\n            </Modal>\n          </Col>\n\n          <Card className=\"NewWorkOrders\">\n            <Card.Header>\n              <Card.Title className=\"text-center\" as=\"h5\">\n                New Work Orders\n              </Card.Title>\n            </Card.Header>\n            <Card.Body className=\"px-0 py-2\">\n              <Table responsive hover>\n                <tbody>\n                  {this.state.jobList.map((item, index) => {\n                   \n                    if (\n                      (item.data.assignedby === \"client\") |\n                      (item.data.assignedby === \"Salesteam\")\n                    ) {\n                      return (\n                        <tr\n                          style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            width: \"100%\",\n                          }}\n                          key={index}\n                        >\n                          <DropdownButton\n                            onSelect={(e) => {\n                              let selected = \"\";\n                              if (e.includes(\"dispatcher\")) {\n                                selected = context.dispatchersList[e[0]];\n                              } else {\n                                selected = context.teamLeadersList[e[0]];\n                              }\n                              this.setState({\n                                selectedUser: selected,\n                                selectedIndex: index,\n                                selectedUserClient:\n                                  selected.name + selected.lastName,\n                              });\n                            }}\n                            title={\n                              index === this.state.selectedIndex\n                                ? this.state.selectedUserClient\n                                : \"Select Assignee\"\n                            }\n                          >\n                            <Dropdown.Header>Team leaders</Dropdown.Header>\n                            <Dropdown.Divider />\n                            {context.teamLeadersList.map((item, index) => (\n                              <Dropdown.Item\n                                key={`${item.id}_teamLeader`}\n                                eventKey={`${index}_teamLeader`}\n                              >\n                                {item.name} {item.lastName}\n                              </Dropdown.Item>\n                            ))}\n                            <Dropdown.Divider />\n                            <Dropdown.Header>Dispatchers</Dropdown.Header>\n                            <Dropdown.Divider />\n                            {context.dispatchersList.map((item, index) => (\n                              <Dropdown.Item\n                                key={`${item.id}_dispatcher`}\n                                eventKey={`${index}_dispatcher`}\n                              >\n                                {item.name} {item.lastName}\n                              </Dropdown.Item>\n                            ))}\n                          </DropdownButton>\n                          <td>\n                            <a\n                              onClick={(e) => {\n                                handleDeleteJob(item.data.jobId).then(\n                                  async () => {\n                                    const jobList = await getJobs();\n                                 \n                                    this.setState({ jobList });\n                                  }\n                                );\n                              }}\n                              href={DEMO.BLANK_LINK}\n                              className=\"label theme-bg2 text-white f-12\"\n                            >\n                              Reject\n                            </a>\n                            <a\n                              href={DEMO.BLANK_LINK}\n                              onClick={(e) => {\n                                const data = {\n                                  assignedTo: this.state.selectedUser,\n                                };\n                                updateAssignedTo(item.data.jobId, data).then(\n                                  async () => {\n                                    updateManager(\n                                      item.data.jobId,\n                                      context.currentUser.uid\n                                    );\n                                    updateDispatcher(\n                                      item.data.jobId,\n                                      data\n                                    ).then(async () => {\n                                      const jobList = await getJobs();\n                                      this.setState({ jobList });\n                                    });\n                                  }\n                                );\n                              }}\n                              className=\"label theme-bg text-white f-12\"\n                            >\n                              Approve\n                            </a>\n                          </td>\n                          <td>{item.data.woNum}</td>\n                          <td>{item.data.jobData.joblocation}</td>\n                          <td>{item.data.jobData.trade}</td>\n                          <td>{item.data.jobData.nte}</td>\n                          <td>{item.data.jobData.clientName}</td>\n                          <td>{item.data.jobData.neededdate}</td>\n                          <td>{item.data.jobData.urgency}</td>\n                          <td>{item.data.jobData.jobdescr}</td>\n                          <td\n                            style={{ paddingTop: \"3px\", display: \"flex\" }}\n                          ></td>\n                        </tr>\n                      );\n                    }\n                    return null;\n                  })}\n                </tbody>\n              </Table>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Button\n  onClick={() => {\n    this.setState({ openAddWO: true });\n  }}\n  className=\"btn btn-primary\"\n  type=\"Modal\"\n>\n  Add New W.O.\n</Button>\n<InputGroup\n\n  size=\"sm\"\n  className=\"mb-3\"\n  style={{\n    width: 250,\n  }}\n>\n  {/* InputGroup content */}\n</InputGroup>\n\n        <Table\n  responsive\n  hover\n  style={{ backgroundColor: \"white\" }}\n  className=\"table mt-3\"\n  id=\"tablepadding\"\n>\n  <thead>\n    <tr>\n      <th\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n        }}\n      >\n        WO numb\n      </th>\n      <th>Job location</th>\n              <th>contact</th>\n              <th>Trade</th>\n              <th>NTE</th>\n              <th>IVR Code</th>\n              <th>Po Number</th>\n              <th>Client Name</th>\n              <th>Submitted date</th>\n              <th>Needed Date</th>\n              <th>Urgency</th>\n              <th>Caller Name</th>\n              <th>Job Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.jobList.map((item, index) => {\n              return (\n                <tr\n                  key={index}\n                  onClick={() => {\n                    this.setState({\n                      selectedJob: item,\n                    });\n                  }}\n                >\n                  <td\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      justifyContent: \"center\",\n                    }}\n                    onClick={() => {\n                      this.setState({\n                        showDetailModal: true,\n                        selectedJob: item,\n                      });\n                    }}\n                  >\n                    {item.data.woNum}\n                  </td>\n                  <td>{item.data.jobData.joblocation}</td>\n                  <td>{item.data.jobData.contact}</td>\n                  <td>{item.data.jobData.trade}</td>\n                  <td>{item.data.jobData.nte}</td>\n                  <td>{item.data.jobData.ivrcode}</td>\n                  <td>{item.data.jobData.poNumb}</td>\n                  <td>{item.data.jobData.clientName}</td>\n                  <td>{item.data.jobData.submdate}</td>\n                  <td>{item.data.jobData.neededdate}</td>\n                  <td>{item.data.jobData.urgency}</td>\n                  <td>{item.data.jobData.callerName}</td>\n                  <td>{item.data.jobData.jobdescr}</td>\n                  <td\n                    style={{\n                      paddingTop: \"3px\",\n                      display: \"flex\",\n                    }}\n                  >\n                    <DropdownButton\n                      onSelect={async (e) => {\n                        this.setState({\n                          selectedJob: item,\n                        });\n\n                        if (e === \"1\") {\n                          await handleDeleteJob(item.data.jobId);\n                          const jobList = await getJobs();\n                          this.setState({ jobList });\n                        } else if (e === \"0\") {\n                          this.openModal();\n                          this.setState({\n                            itemToEdit: item.data,\n                            editItemIndex: index,\n                          });\n                        }\n                      }}\n                      title={\"\"}\n                    >\n                      <Dropdown.Item eventKey=\"0\">Edit</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"1\">Delete</Dropdown.Item>\n                    </DropdownButton>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n       \n        <Modal show={showModal} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit WO</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div style={{ width: \"100%\" }}>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"wo-number-label\"\n                >\n                  Wo #\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter wo Number...\"\n                  aria-label=\"WoNumber\"\n                  aria-describedby=\"woNumber-label\"\n                  value={this.state.itemToEdit.woNum}\n                  onChange={(event) =>\n                    this.setState({ woNum: event.target.value })\n                  }\n                />\n              </div>\n\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"job-location-label\"\n                >\n                  Job Location\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter job location...\"\n                  aria-label=\"JobLocation\"\n                  aria-describedby=\"joblocation-label\"\n                  value={joblocation}\n                  onChange={(event) =>\n                    this.setState({ joblocation: event.target.value })\n                  }\n                />\n              </div>\n\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"contact-label\"\n                >\n                  Contact\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter phone number...\"\n                  aria-label=\"Contact\"\n                  aria-describedby=\"contact-label\"\n                  value={contact}\n                  onChange={(event) =>\n                    this.setState({ contact: event.target.value })\n                  }\n                />\n              </div>\n\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"trade-label\"\n                >\n                  Trade\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Trade type...\"\n                  aria-label=\"Trade\"\n                  aria-describedby=\"trade-label\"\n                  value={trade}\n                  onChange={(event) =>\n                    this.setState({ trade: event.target.value })\n                  }\n                />\n              </div>\n\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"nte-label\"\n                >\n                  NTE\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter nte...\"\n                  aria-label=\"NTE\"\n                  aria-describedby=\"nte-label\"\n                  value={nte}\n                  onChange={(event) =>\n                    this.setState({ nte: event.target.value })\n                  }\n                />\n              </div>\n\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"ivrcode-label\"\n                >\n                  Ivr Code\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter ivr code...\"\n                  aria-label=\"IvrCode\"\n                  aria-describedby=\"ivrcode-label\"\n                  value={ivrcode}\n                  onChange={(event) =>\n                    this.setState({ ivrcode: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"ivrNumbcode-label\"\n                >\n                  Ivr Number\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter ivr Number...\"\n                  aria-label=\"ivrNumber\"\n                  aria-describedby=\"ivrNumb-label\"\n                  value={ivrNumb}\n                  onChange={(event) =>\n                    this.setState({ ivrNumb: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"poNumb-label\"\n                >\n                  Po Number\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Po Number...\"\n                  aria-label=\"PoNumber\"\n                  aria-describedby=\"ponumber-label\"\n                  value={poNumb}\n                  onChange={(event) =>\n                    this.setState({ poNumb: event.target.value })\n                  }\n                />\n              </div>\n            </div>\n            <div style={{ width: \"100%\" }}>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"clientname-label\"\n                >\n                  Client Name\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter client name...\"\n                  aria-label=\"ClientName\"\n                  aria-describedby=\"clientname-label\"\n                  value={clientName}\n                  onChange={(event) =>\n                    this.setState({ clientName: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"submdate-label\"\n                >\n                  Submitted Date\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"date\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Submitted Date...\"\n                  aria-label=\"Submitteddate\"\n                  aria-describedby=\"submdate-label\"\n                  value={submdate}\n                  onChange={(event) =>\n                    this.setState({ submdate: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"neededdate-label\"\n                >\n                  Needed date\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"date\"\n                  className=\"form-control\"\n                  placeholder=\"Enter needed date...\"\n                  aria-label=\"NeededDate\"\n                  aria-describedby=\"neededdate-label\"\n                  value={neededdate}\n                  onChange={(event) =>\n                    this.setState({ neededdate: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"urgency-label\"\n                >\n                  Urgency\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Urgency...\"\n                  aria-label=\"Urgency\"\n                  aria-describedby=\"urgency-label\"\n                  value={urgency}\n                  onChange={(event) =>\n                    this.setState({ urgency: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"callername-label\"\n                >\n                  Caller Name\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Caller Name...\"\n                  aria-label=\"CallerName\"\n                  aria-describedby=\"callername-label\"\n                  value={callerName}\n                  onChange={(event) =>\n                    this.setState({ callerName: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"jobdescr-label\"\n                >\n                  Job Description\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Detailled job description...\"\n                  aria-label=\"JobDescription\"\n                  aria-describedby=\"jobdescr-label\"\n                  value={jobdescr}\n                  onChange={(event) =>\n                    this.setState({ jobdescr: event.target.value })\n                  }\n                />\n              </div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.updateDoc}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Management;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;"],"names":["app","initializeApp","CONFIG","firebaseConfig","db","getFirestore","Management","Component","constructor","props","super","componentDidMount","async","this","context","jobList","getJobs","setState","handleZipcodeChange","value","event","target","jobZip","length","test","response","fetch","concat","data","json","places","city","state","joblocation","jobState","jobLocation","error","console","handleDeleteJob","handleClose","showModal","openAddWO","showDetailModal","openModal","formattedDate","Date","toISOString","substr","datta","woNum","streetAddress","estimNeeded","contact","trade","nte","ivrcode","ivrNumb","poNumb","clientName","submdate","neededdate","urgency","callerName","callerNumber","jobdescr","itemToEdit","status","selectedUser","selectedtype","selectedMan","selectedDisp","selectedTeamLeader","selectedStatus","currentUser","selectedUName","selectedUserClient","selectedIndex","isDragging","initialPosition","x","y","modalPosition","handleFormSubmit","bind","preventDefault","jobLocationString","newItem","manager","teamLeader","dispatcher","uid","assignedTo","assignedby","jobData","teamLeaderData","dispatcherData","estimTechName","estimTechCon","estimTechproffesion","estimDate","estimTime","estimCost","estimPaidby","estimPaymentAdress","estimTechDescription","estimscheduleddate","estimscheduledtimee","jobDoneTechId","estimTechId","jobDoneTechName","jobDoneTechCon","jobdoneTechproffesion","jobDoneDate","jobDoneTime","jobDoneCost","jobDonePaidby","jobDonePaymentAdress","jobDoneHours","jobDoneTechDescription","suppliyer","otherSuppliyer","material","jobdonescheduledate","jobdonescheduledtime","setJob","then","docId","doc","id","updateDoc","jobId","render","_jsxs","children","Col","_jsx","Modal","centered","style","display","flexDirection","width","justifyContent","show","onHide","Header","closeButton","backgroundColor","map","item","index","onClick","closeJobItemModal","selectedJob","paddingTop","marginLeft","Title","as","Body","className","Form","onSubmit","Row","md","type","placeholder","onChange","readOnly","Group","marginTop","Check","transform","e","isChecked","checked","updatedJobStatus","custom","label","color","errorMessage","DropdownButton","onSelect","selected","includes","dispatchersList","teamLeadersList","name","lastName","title","React","Dropdown","Divider","Item","eventKey","Card","Table","responsive","hover","href","DEMO","BLANK_LINK","updateAssignedTo","updateManager","updateDispatcher","Button","InputGroup","size","editItemIndex","Footer","variant","contextType","MainContext","_excluded","propTypes","PropTypes","isRequired","disabled","menuAlign","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","bsPrefix","_ref","ref","_objectWithoutPropertiesLoose","_extends","DropdownToggle","childBsPrefix","DropdownMenu","align","role","renderOnMount","displayName","DEVICE_SIZES","noGutters","_ref$as","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","classNames","defaultProps"],"sourceRoot":""}