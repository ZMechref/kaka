{"version":3,"file":"static/js/567.f992e816.chunk.js","mappings":"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","sources":["MainScreen/Dispatcher.js","App/components/UcFirst.js","MainScreen/TechList.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { MainContext } from \"../core/MainContext\";\nimport { CONFIG } from \"../helpers/configFb\";\nimport Autosuggest from 'react-autosuggest';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { getTechData , fetchTechConData } from './TechList';\nimport {\n  Row,\n  Col,\n  Card,\n  Badge,\n  Table,\n  Form,\n  Button,\n  InputGroup,\n  FormControl,\n  Modal,\n  ButtonWithBadge,\n} from \"react-bootstrap\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport {\n  dispDoc,\n  findWoByNumber,\n  findWoForCurrentUser,\n  updateDispatcherData,\n  jobData,\n  updateChanges,\n  setJobStatus,\n  setTech,\n  getTechs,\n  techDoc,\n} from \"../helpers/fireStoreMain\";\nimport FormFileLabel from \"react-bootstrap/esm/FormFileLabel\";\n\nimport { data } from \"jquery\";\n\n\nconst app = initializeApp(CONFIG.firebaseConfig);\nconst db = getFirestore(app);\n\nconst estimtable = document.getElementById(\"esTimmNeededTable\");\nconst jobdonetable = document.getElementById(\"jobDoneTable\");\n\n\nconst CustomComponent = ({ data }) => {\n  return (\n    <div\n      style={{\n        marginLeft: \"10%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      {data}\n    </div>\n  );\n};\n\nclass Dispatcher extends Component {\n  static contextType = MainContext;\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      showTable: true,\n      writeAccess: true,\n\n      estimTechName: \"\",\n      estimTechCon: \"\",\n      estimTechproffesion: \"\",\n      estimCost: \"\",\n      estimPaidby: \"\",\n      estimPaymentAdress: \"\",\n      estimTechDescription: \"\",\n      estimscheduleddate: \"\",\n      estimscheduledtimee: \"\",\n      \n      jobDoneTechName: \"\",\n      jobDoneTechCon: \"\",\n      jobdoneTechproffesion: \"\",\n      jobDoneCost: \"\",\n      jobDonePaidby: \"\",\n      jobDonePaymentAdress: \"\",\n      jobDoneHours: \"\",\n      jobDoneTechDescription: \"\",\n      suppliyer: \"\",\n      otherSuppliyer: \"\",\n      material: \"\",\n      jobdonescheduledate: \"\",\n      jobdonescheduledtime: \"\",\n\n      estimTechId:\"\",\n      jobDoneTechId:\"\",\n\n      dispId: \"\",\n      jobType: \"\",\n\n      data: {\n\n        estimTechName: \"\",\n        estimTechCon: \"\",\n        estimTechproffesion: \"\",\n        estimCost: \"\",\n        estimPaidby: \"\",\n        estimPaymentAdress: \"\",\n        estimTechDescription: \"\",\n        estimscheduleddate: \"\",\n        estimscheduledtimee: \"\",\n       \n        jobDoneTechId:\"\",\n        estimTechId:\"\",\n\n        jobDoneTechName: \"\",\n        jobDoneTechCon: \"\",\n        jobdoneTechproffesion: \"\",\n        jobDoneCost: \"\",\n        jobDonePaidby: \"\",\n        jobDonePaymentAdress: \"\",\n        jobDoneHours: \"\",\n        jobDoneTechDescription: \"\",\n        suppliyer: \"\",\n        otherSuppliyer: \"\",\n        material: \"\",\n        jobdonescheduledate: \"\",\n        jobdonescheduledtime: \"\",\n        dispId: \"\",\n        jobType: \"\",\n      },\n      errorMessage: \"\",\n      woNbSearch: \"\",\n      subClicked: false,\n      onFindWOClick: false,\n      jobDoneNeededCount: 0,\n      estimNeededCount: 0,\n\n      estimationListModal: false,\n      JobDoneListModal: false,\n      on1stsubmitclick: false,\n      on2cdsubmitclick: false,\n      onestimclicktoconfirm: false,\n\n      estimNeededList: [],\n      jobDoneList: [],\n      jobList: [],\n      estimJobList: [],\n      jobDoneJobList: [],\n      selectedJob: [  ],\n      filteredTechNames: [],\n      techList:[],\n\n      closeJobItemModal: false,\n      modalDisplayWOdetails: false,\n      estimationProcess: false,\n\n      estimationFinalize: false,\n      techData:{ techCon:\"\",\n                 techName:\"\",}\n    }; \n  \n  }\n  async componentDidMount() {\n    try {\n      const techConData = await fetchTechConData();\n      this.setState({ techList: techConData });\n    } catch (error) {\n      console.error('Error fetching techCon data:', error);\n    }\n  }\n\n getSuggestions = (value, field) => {\n  if (!value) {\n    return [];\n  }\n\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  const { techList } = this.state;\n\n  if (!inputValue || !techList || !techList.length) {\n    return [];\n  }\n\n  return techList\n    .filter(item => {\n      const fieldValue = item.data[field]?.toLowerCase(); // Use optional chaining (?.) to avoid errors if field is undefined\n      return fieldValue && fieldValue.includes(inputValue);\n    })\n    .map(item => item.data[field]);\n};\ncomponentDidMount() {\n  this.fetchTechData();\n}\n\nfetchTechData = async () => {\n  try {\n    const techData = await getTechData();\n    this.setState({ techList: techData });\n  } catch (error) {\n    console.error('Error fetching tech data:', error);\n  }\n};\n\n  renderSuggestion = (suggestion) => <div>{suggestion}</div>;\n  componentDidMount = async () => {\n    const techList = await getTechs();\n    this.setState({ techList });\n  };\n  targetHandler = (target) => {\n    this.setState((prevState) => ({\n      selectedTarget: prevState.selectedTarget === target ? null : target,\n    }));\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState((prevState) => ({\n      techData: {\n        ...prevState.techData,\n        [name]: value,\n       \n      },\n    }));\n  };\n\n  estimationProcess = () => {};\n  on1stsubmitclick = () => {};\n  on2cdsubmitclick = () => {};\n  onestimclicktoconfirm = () => {};\n  onFindWOClick = () => {};\n  estimationListModal = () => {};\n  JobDoneListModal = () => {};\n  checkbox1Checked = () => {};\n\n onFinishOnSite = (data) => {\n  // Assuming this.state.selectedJob.id and data are used in the setJobStatus function\n  setJobStatus(this.state.selectedJob.id, \"jobDoneScheduled\")\n    .then(() => {\n      // Code to execute after setJobStatus completes successfully\n      // You can add further logic here if needed\n    })\n    .catch((error) => {\n      // Error handling for setJobStatus or any other promise in the chain\n      console.error('Error:', error);\n    });\n};\n\n \n  \n  onSubmitEstimation = () => {\n    const data = {\n      estimTechName: this.state.estimTechName,\n      estimTechCon: this.state.estimTechCon,\n      estimTechproffesion: this.state.estimTechproffesion,\n      estimCost: this.state.estimCost,\n      estimPaidby: this.state.estimPaidby,\n      estimPaymentAdress: this.state.estimPaymentAdress,\n      estimTechDescription: this.state.estimTechDescription,\n      estimscheduleddate: this.state.estimscheduleddate,\n      estimscheduledtimee: this.state.estimscheduledtimee,\n      estimTechId: this.state.estimTechId,\n\n      jobDoneTechName: this.state.jobDoneTechName,\n      jobDoneTechCon: this.state.jobDoneTechCon,\n      jobdoneTechproffesion: this.state.jobdoneTechproffesion,\n      jobDoneCost: this.state.jobDoneCost,\n      jobDonePaidby: this.state.jobDonePaidby,\n      jobDonePaymentAdress: this.state.jobDonePaymentAdress,\n      jobDoneHours: this.state.jobDoneHours,\n      jobDoneTechDescription: this.state.jobDoneTechDescription,\n      suppliyer: this.state.suppliyer,\n      otherSuppliyer: this.state.otherSuppliyer,\n      material: this.state.material,\n      jobdonescheduledate: this.state.jobdonescheduledate,\n      jobdonescheduledtime: this.state.jobdonescheduledtime,\n      jobDoneTechId: this.state.jobDoneTechId,\n\n      jobType: this.state.jobType,\n    };\n\n    updateDispatcherData(this.state.selectedJob.id, data)\n      .then(() => {\n        return setJobStatus(this.state.selectedJob.id, \"estimationScheduled\");\n      })\n      .then(() => {   \n      })\n      .catch((error) => {\n      });\n  };\n\n  onSubmitJobDone = (item) => {\n    const data = {\n      estimTechName: item.data.dispatcherData.estimTechName,\n      estimTechCon: item.data.dispatcherData.estimTechCon,\n      estimTechproffesion: item.data.dispatcherData.estimTechproffesion,\n      estimCost: item.data.dispatcherData.estimCost,\n      estimPaidby: item.data.dispatcherData.estimPaidby,\n      estimPaymentAdress: item.data.dispatcherData.estimPaymentAdress,\n      estimTechDescription: item.data.dispatcherData.estimTechDescription,\n      estimscheduleddate: item.data.dispatcherData.estimscheduleddate,\n      estimscheduledtimee: item.data.dispatcherData.estimscheduledtimee,\n      estimTechId: item.data.DispatcherData.estimTechId,\n\n      jobDoneTechName: this.state.jobDoneTechName,\n      jobDoneTechCon: this.state.jobDoneTechCon,\n      jobdoneTechproffesion: this.state.jobdoneTechproffesion,\n      jobDoneCost: this.state.jobDoneCost,\n      jobDonePaidby: this.state.jobDonePaidby,\n      jobDonePaymentAdress: this.state.jobDonePaymentAdress,\n      jobDoneHours: this.state.jobDoneHours,\n      jobDoneTechDescription: this.state.jobDoneTechDescription,\n      suppliyer: this.state.suppliyer,\n      otherSuppliyer: this.state.otherSuppliyer,\n      material: this.state.material,\n      jobdonescheduledate: this.state.jobdonescheduledate,\n      jobdonescheduledtime: this.state.jobdonescheduledtime,\n      jobDoneTechId: item.data.DispatcherData.jobDoneTechId,\n\n      jobType: this.state.jobType,\n    };\n\n    // Assuming 'updateDispatcherData' and 'setJobStatus' return promises\n    updateDispatcherData(this.state.selectedJob.id, data)\n      .then(() => {\n        return setJobStatus(this.state.selectedJob.id, \"jobDoneScheduled\");\n      })\n      .then(() => {\n        // Handle any further actions after setting job status\n      })\n      .catch((error) => {\n        // Handle errors here\n      });\n  };\n\n  updateDimensions = () => {\n\n    this.setState({ innerWidth: window.innerWidth });\n    const width = window.innerWidth;\n  };\n  \n  countStatus = (status) => {\n    const count = this.state.jobList.filter(\n      (item) => item.data.status === status\n    ).length;\n    return count;\n  };\n\n  componentDidMount() {\n    const estimNeededCount = this.countStatus(\"estimationNeeded\");\n    const jobDoneNeededCount = this.countStatus(\"jobDoneNeeded\");\n\n    this.setState({\n      estimNeededCount,\n      jobDoneNeededCount,\n    });\n  }\n\n  componentDidMount() {\n    this.countEstimNeeded(); // Call the count function on mount\n  }\n  countEstimNeeded = () => {\n    const count = this.state.jobList.filter(\n      (item) => item.data.status === \"estimationNeeded\"\n    );\n\n    this.setState({ estimNeededCount: count });\n  };\n\n  componentDidMount() {\n    this.countJobDoneNeeded(); // Call the count function on mount\n  }\n  countJobDoneNeeded = () => {\n    const count = this.state.jobList.filter(\n      (item) => item.data.status === \"jobDoneNeeded\"\n    ).length;\n\n    this.setState({ jobDoneNeededCount: count });\n  };\n\n  componentDidMount = async () => {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    const context = this.context;\n    console.log(\"context currentUser disp Page\", context.currentUser);\n\n    if (context.currentUser !== null) {\n      const estimNeededList =\n        (await findWoForCurrentUser(context.currentUser.uid)) |\n        (this.state.status === \"estimationNeeded\");\n\n      const jobDoneList =\n        (await findWoForCurrentUser(context.currentUser.uid)) |\n        (this.state.jobStatus === \"jobDoneNeeded\");\n\n      const jobList = await findWoForCurrentUser(context.currentUser.uid).then(\n        (resp) => {\n          const a = this.getEstimatedPending(resp);\n          const b = this.getJobDonePending(resp);\n          this.setState({\n            jobList: resp,\n            estimationPending: a.tostring,\n            jobDonePending: b.tostring,\n          });\n        }\n      );\n\n    }\n  };\n\n  getEstimatedPending = async (list) => {\n    let count = 0;\n    list.map((item) => {\n      if (item.data.status === \"estimationNeeded\") count = count + 1;\n    });\n    this.setState({ estimNeededCount: count });\n    return count;\n  };\n  getJobDonePending = async (list) => {\n    let count = 0;\n    list.map((item) => {\n      if (item.data.status === \"jobDoneNeeded\") count = count + 1;\n    });\n    this.setState({ jobDoneNeededCount: count });\n    return count;\n  };\n\n  handleClose = () => {\n    this.setState({ estimationProcess: false });\n    this.setState({ closeJobItemModal: false });\n    this.setState({ estimationListModal: false });\n    this.setState({ JobDoneListModal: false });\n    this.setState({ on1stsubmitclick: false });\n    this.setState({ onestimclicktoconfirm: false });\n    this.setState({ on2cdsubmitclick: false });\n    this.setState({ onSubmitClick: false });\n    this.setState({ modalDisplayWOdetails: false });\n    this.setState({ estimationFinalize: false });\n  };\n  onPressed = () => {\n    const { password } = this.state;\n    this.setState({\n      data: {\n        estimTechName: \"\",\n        estimTechCon: \"\",\n        estimTechproffesion: \"\",\n        estimCost: \"\",\n        estimPaidby: \"\",\n        estimPaymentAdress: \"\",\n        estimTechDescription: \"\",\n        estimscheduleddate: \"\",\n        estimscheduledtimee: \"\",\n\n        jobDoneTechName: \"\",\n        jobDoneTechCon: \"\",\n        jobdoneTechproffesion: \"\",\n        jobDoneCost: \"\",\n        jobDonePaidby: \"\",\n        jobDonePaymentAdress: \"\",\n        jobDoneHours: \"\",\n        jobDoneTechDescription: \"\",\n        suppliyer: \"\",\n        otherSuppliyer: \"\",\n        material: \"\",\n        jobdonescheduledate: \"\",\n        jobdonescheduledtime: \"\",\n\n        dispId: \"\",\n        jobType: \"\",\n      },\n    });\n  };\n\n  render() {\n    const { selectedJob } = this.state;\n    const {\n    \n      techList,\n      getTechs,\n      estimNeededCount,\n      jobDoneNeededCount,\n      selectedTarget,\n    } = this.state;\n\n\n    const sortedJobList = this.state.jobList\n      .filter(item => item.data.status === 'jobDoneNeeded') // Filter based on jobStatus\n      .sort((a, b) => {\n        const dateA = new Date(a.data.jobData.neededdate);\n       \n        const dateB = new Date(b.data.jobData.neededdate);\n        console.log(\"YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",dateB);\n        const today = new Date();\n\n        const differenceA = Math.abs(dateA - today);\n        const differenceB = Math.abs(dateB - today);\n\n        return differenceA - differenceB;\n      });\n     \n \nconst ButtonWithBadge = ({ count, text }) => (\n  <button style={{ backgroundColor: 'lightblue' }} onClick={() => this.targetHandler(text)} aria-controls={text} aria-expanded={selectedTarget === text}>\n    {text}\n    {count > 0 && <Badge variant=\"light\" style={{ fontSize: 14, color: 'red' }} className=\"ml-1\">{count}</Badge>}\n  </button>\n);\nconst context = this.context;\nconst tabEstimationbContent = (\n\n  <Col>\n  <button>UpLoad Pictures</button>\n  <button>UpLoad SignOff Sheet</button>\n  <button>Upload Tech's Quotation</button>\n  <button>Upload Tech's Recommendations</button>\n  <Button onClick={() => this.onFinishOnSite({ selectedJob: { data: 'jobDoneScheduled' } })}>Finish On Site</Button>\n\n\n  <Form.Control\n    aria-controls=\"target5\"\n    aria-expanded={selectedTarget === 'target5'}\n    style={{\n      display: 'flex',\n      justifyContent: 'center',\n      marginBottom: '1%',\n    }}\n    placeholder=\" Tech's Recommendations\"\n    as=\"textarea\"\n    rows=\"3\"\n  />\n\n  <Button onClick={() => this.setState({ selectedJob: { data: 'QuotationNeededy' } })}>Finalize Estim.</Button>\n</Col>\n);\n\nconst tabbJobdoneContent = (\n  <div style={{ display: 'flex' }}>\n  <Col> <button >UpLoad Pictures</button><>  </>\n          <button>UpLoad SignOff Sheet</button><>  </>\n          <button>Upload Tech's Quotation</button><>  </>\n          <button>Upload Tech's Recommendations</button> <> </>\n          <Button onClick={() => this.setState({ selectedJob: { data: \"invoiceNeeded\" } })}>Finalize Job</Button>\n      \n      <Form.Control\n        aria-controls=\"target5\"\n        aria-expanded={selectedTarget === 'target5'}\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          marginBottom: '1%',\n        }}\n        placeholder=\" Tech's Recommendations\"\n        as=\"textarea\"\n        rows=\"3\"\n      />\n    \n    </Col>\n            {\" \"}\n\n        </div> );\n\n    return (\n      <div>\n        {\" \"}\n        <div\n          style={{\n            justifyContent: \"center\",\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n         <Modal\n        style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginLeft: \"-4%\",\n        }}\n        show={this.state.JobDoneListModal}\n        onHide={this.handleClose}\n        centered=\"true\"\n        >\n        <Modal.Header\n        style={{\n        backgroundColor: \"white\",\n        width: \"200%\",\n        display: \"flex\",\n        flexDirection: \"row\",\n         }}\n         closeButton\n         >\n        <Modal.Title\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n      }}\n    >\n      Schedule New Job Done\n        </Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ backgroundColor: \"white\", width: \"200%\" }}>\n        <Card className=\"NewWorkOrders\">\n        <Card.Body className=\"px-0 py-2\">\n       \n        <Table\n          responsive\n          hover\n          style={{ backgroundColor: 'white' }}\n          className=\"table mt-3\"\n          id=\"tablepadding\"\n        >\n          <thead>\n            <tr>\n              <th>WO numb</th>\n              <th>Job location</th>\n              <th>Contact</th>\n              <th>Trade</th>\n              <th>NTE</th>\n              <th>Client Name</th>\n              <th>Submitted date</th>\n              <th>Needed Date</th>\n              <th>Urgency</th>\n              <th>Job Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortedJobList.map((item, index) => (\n              <tr\n                key={index}\n                onClick={() => {\n                  this.setState({\n                    JobDoneListModal:false,\n                    closeJobItemModal: true,\n                    selectedJob: item,\n                  });\n                }}\n              >\n                <td>{item.data.woNum}</td>\n                <td>{item.data.jobData.joblocation}</td>\n                <td>{item.data.jobData.contact}</td>\n                <td>{item.data.jobData.trade}</td>\n                <td>{item.data.jobData.nte}</td>\n                <td>{item.data.jobData.clientName}</td>\n                <td>{item.data.jobData.submdate}</td>\n                <td>{item.data.jobData.neededdate}</td>\n                <td>{item.data.jobData.urgency}</td>\n                <td>{item.data.jobData.jobdescr}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      \n        </Card.Body>\n       </Card>\n        </Modal.Body>\n        <Modal.Footer\n    style={{\n      height: \"80%\",\n      backgroundColor: \"whitesmoke\",\n      width: \"200%\",\n      display: \"flex\",\n      flexDirection: \"row\",\n    }}\n        ></Modal.Footer>\n         </Modal>\n\n          {/* {heda te3 new jobdone list} */}\n\n          <Modal\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              marginLeft: \"-4%\",\n            }}\n            show={this.state.estimationListModal}\n            onHide={this.handleClose}\n            centered={true}\n\n\n          >\n            <Modal.Header\n              style={{\n                backgroundColor: \"white\",\n                width: \"200%\",\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n              closeButton\n            >\n              <Modal.Title\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                }}\n              >\n                Schedule New estimation\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ backgroundColor: \"white\", width: \"200%\" }}>\n              <Card className=\"NewWorkOrders\">\n                <Card.Body className=\"px-0 py-2\">\n                  <Table\n                    responsive\n                    hover\n                    style={{ backgroundColor: \"white\" }}\n                    className=\"table mt-3\"\n                    id=\"tablepadding\"\n                  >\n                    <thead>\n                    <tr>\n                  <th>WO numb</th>\n                  <th>Job location</th>\n                  <th>contact</th>\n                  <th>Trade</th>\n                  <th>NTE</th>\n                  <th>Client Name</th>\n                  <th>Submitted date</th>\n                  <th>Needed Date</th>\n                  <th>Urgency</th>\n                  <th>Job Description</th>\n                </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.jobList.map((item, index) => {\n                        if (item.data.status === \"estimationNeeded\") {\n                          return (\n                            <tr\n                              key={index}\n                              onClick={() => {\n                                this.setState({\n                                  estimationProcess: true,\n                                  estimationListModal: false,\n                                  selectedJob: item,\n                                });\n                              }}\n                              style={{\n                                backgroundColor:\n                                  item.data.jobData.neededdate === \"today\"? \"red\" : \"lightorange\",\n                              }}\n                            >\n                           <td>{item.data.woNum}</td>\n                        <td>{item.data.jobData.joblocation}</td>\n                        <td>{item.data.jobData.contact}</td>\n                        <td>{item.data.jobData.trade}</td>\n                        <td>{item.data.jobData.nte}</td>\n                        <td>{item.data.jobData.clientName}</td>\n                        <td>{item.data.jobData.submdate}</td>\n                        <td>{item.data.jobData.neededdate}</td>\n                        <td>{item.data.jobData.urgency}</td>\n                        <td>{item.data.jobData.jobdescr}</td>\n                              <td\n                                style={{\n                                  paddingTop: \"3px\",\n                                  display: \"flex\",\n                                }}\n                              ></td>\n                            </tr>\n                          );\n                        } else {\n                          // Return null if the condition isn't met to skip rendering the row\n                          return null;\n                        }\n                      })}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </Modal.Body>\n            <Modal.Footer\n              style={{\n                height: \"80%\",\n                backgroundColor: \"whitesmoke\",\n                width: \"200%\",\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            ></Modal.Footer>\n          </Modal>\n\n          {/* heda te3\n           estimation list */}\n\n       <Modal id=\"dynamicFormModule\"\n              centered={true}\n              style={{\n              marginLeft: \"-4%\",\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              // backgroundColor: \"InfoText\",\n            }}\n            show={this.state.estimationProcess}\n            onHide={this.handleClose}\n          >\n            <Modal.Header\n              style={{\n                backgroundColor: \"white\",\n                width: \"130%\",\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n              closeButton\n            >\n              <Modal.Title  style={{ width: \"130%\", display: \"flex\",flexDirection: \"row\",  justifyContent: \"center\" }}\n                 \n              >\n                Estimation Proccessing\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body\n              md={3}\n              style={{\n                width: \"130%\",\n                backgroundColor: \"white\",\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <Form>\n                <Row>\n                  <Col style={{ marginleft: \"-55%\" }}>\n                  \n                  <InputGroup size=\"sm\" className=\"mb-3\" style={{ width: '93%' }}>\n            <InputGroup.Prepend style={{ width: '44%' }}>\n              <InputGroup.Text>Tech Contact</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Autocomplete\n  value={this.state.techData.techCon}\n  onChange={(event, newValue) => {\n    this.setState((prevState) => ({\n      techData: {\n        ...prevState.techData,\n        techCon: newValue,\n      },\n    }));\n  }}\n  options={this.state.techList} // Assuming techList contains an array of objects with a property 'techCon'\n  renderInput={(params) => (\n    <TextField\n      {...params}\n      type=\"text\"\n      style={{ width: '135%' }}\n      name=\"techCon\"\n      placeholder=\"Search Via Contact...\"\n      onChange={(event) => this.handleInputChange(event)}\n    /> \n  )}\n/>\n          </InputGroup>\n\n        <InputGroup size=\"sm\" className=\"mb-3\" style={{ width: \"93%\" }}>\n          <InputGroup.Prepend style={{ width: \"44%\" }}>\n            <InputGroup.Text>Tech Name</InputGroup.Text>\n          </InputGroup.Prepend>\n          <Autocomplete\n  value={this.state.techData.techName}\n  onChange={(event, newValue) => {\n    this.setState((prevState) => ({\n      techData: {\n        ...prevState.techData,\n        techName: newValue,\n      },\n    }));\n  }}\n  options={this.state.techList.map(item => item.data.techName)} // Assuming techList contains an array of objects with a property 'techCon'\n  renderInput={(params) => (\n    <TextField\n      {...params}\n      type=\"text\"\n      style={{ width: '135%' }}\n      name=\"techName\"\n      placeholder=\"Search Via Name...\"\n      onChange={(event) => this.handleInputChange(event)}\n    /> \n  )}\n/>\n         </InputGroup>\n\n                    <InputGroup\n                      size=\"sm\"\n                      className=\"mb-3\"\n                      style={{ width: \"93%\", marginTop: 20 }}\n                    >\n                      <InputGroup.Prepend style={{ width: \"44%\" }}>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">\n                          Profession\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl\n                        aria-label=\"Small\"\n                        aria-describedby=\"inputGroup-sizing-sm\"\n                        style={{\n                          background: \"whitesmoke\",\n                          display: \"flex\",\n                          borderColor: \"grey\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({\n                            estimTechproffesion: text.target.value,\n                          });\n                        }}\n                      />\n                    </InputGroup>\n                    {/* profession /////////////////////////////////////////////////////////// */}\n\n                    <InputGroup\n                      size=\"sm\"\n                      className=\"mb-3\"\n                      style={{ width: \"93%\", marginTop: 20 }}\n                    >\n                      <InputGroup.Prepend style={{ width: \"44%\" }}>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">\n                          Trade\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl\n                        aria-label=\"Small\"\n                        aria-describedby=\"inputGroup-sizing-sm\"\n                        style={{\n                          background: \"whitesmoke\",\n                          display: \"flex\",\n                          borderColor: \"grey\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({ jobType: text.target.value });\n                        }}\n                      />\n                    </InputGroup>\n                    {/* Trade ///////////////////////////////////// */}\n                    <InputGroup\n                      size=\"sm\"\n                      className=\"mb-3\"\n                      style={{ width: \"93%\", marginTop: 20 }}\n                    >\n                      <InputGroup.Prepend style={{ width: \"44%\" }}>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">\n                          NTE\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl\n                        aria-label=\"Small\"\n                        aria-describedby=\"inputGroup-sizing-sm\"\n                        style={{\n                          background: \"whitesmoke\",\n                          display: \"flex\",\n                          borderColor: \"grey\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({ estimCost: text.target.value });\n                        }}\n                      />\n                    </InputGroup>\n                    {/* NTE ///////////////////////////////////////////////////////// */}\n                    <InputGroup\n                      size=\"sm\"\n                      className=\"mb-3\"\n                      style={{ width: \"93%\", marginTop: 20 }}\n                    >\n                      <InputGroup.Prepend style={{ width: \"44%\" }}>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">\n                          Scheduled Date\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl\n                        type=\"date\"\n                        aria-label=\"Small\"\n                        aria-describedby=\"inputGroup-sizing-sm\"\n                        style={{\n                          background: \"whitesmoke\",\n                          display: \"flex\",\n                          borderColor: \"grey\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({\n                            estimscheduleddate: text.target.value,\n                          });\n                        }}\n                      />\n                    </InputGroup>\n\n                    <InputGroup\n                      size=\"sm\"\n                      className=\"mb-3\"\n                      style={{ width: \"93%\", marginTop: 20 }}\n                    >\n                      <InputGroup.Prepend style={{ width: \"44%\" }}>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">\n                          Scheduled Time\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl\n                        type=\"time\"\n                        aria-label=\"Small\"\n                        aria-describedby=\"inputGroup-sizing-sm\"\n                        style={{\n                          display: \"flex\",\n                          borderColor: \"grey\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({\n                            estimscheduledtimee: text.target.value,\n                          });\n                        }}\n                      />\n                    </InputGroup>\n\n\n                  </Col>\n\n                  <Col md={5}>\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                      <Form.Label>Note About Job</Form.Label>\n                      <Form.Control\n                        style={{\n                          width: \"110%\",\n                          display: \"flex\",\n                          backgroundColor: \"whitesmoke\",\n                          flexDirection: \"row\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({\n                            estimTechDescription: text.target.value,\n                          });\n                        }}\n                        as=\"textarea\"\n                        rows=\"3\"\n                      />\n                    </Form.Group>{\" \"}\n\n                    <div>\n  <InputGroup\n    size=\"sm\"\n    className=\"mb-3\"\n    style={{ width: \"110%\", marginTop: 20 }}\n  >\n    <InputGroup.Prepend style={{ width: \"44%\" }}>\n      <InputGroup.Text id=\"inputGroup-sizing-sm\">\n        Submited Date\n      </InputGroup.Text>\n    </InputGroup.Prepend>\n    <FormFileLabel\n      aria-label=\"Small\"\n      style={{\n        background: \"whitesmoke\",\n        display: \"flex\",\n        borderColor: \"grey\",\n      }}\n    />\n    <div\n      style={{\n        marginLeft: \"10%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      {/* Assuming selectedJob is set somewhere in your component's state */}\n      {this.state.selectedJob && (\n        <div>\n          {this.state.selectedJob?.data?.jobData?.submdate}\n        </div>\n      )}\n    </div>\n  </InputGroup>\n  <InputGroup\n    size=\"sm\"\n    className=\"mb-3\"\n    style={{ width: \"110%\", marginTop: 20 }}\n  >\n    <InputGroup.Prepend style={{ width: \"43%\" }}>\n      <InputGroup.Text id=\"inputGroup-sizing-sm\">\n        Needed Date\n      </InputGroup.Text>\n    </InputGroup.Prepend>\n    <FormFileLabel\n      aria-label=\"Small\"\n      style={{\n        background: \"whitesmoke\",\n        display: \"flex\",\n        borderColor: \"grey\",\n      }}\n    />\n    <div\n      style={{\n        marginLeft: \"10%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      {/* Assuming selectedJob is set somewhere in your component's state */}\n      {this.state.selectedJob && (\n        <div>\n          {this.state.selectedJob?.data?.jobData?.neededdate}\n        </div>\n      )}\n    </div>\n  </InputGroup>\n  <InputGroup\n    size=\"sm\"\n    className=\"mb-3\"\n    style={{ width: \"110%\", marginTop: 20 }}\n  >\n    <InputGroup.Prepend style={{ width: \"43%\" }}>\n      <InputGroup.Text id=\"inputGroup-sizing-sm\">\n        Your Name\n      </InputGroup.Text>\n    </InputGroup.Prepend>\n    <FormFileLabel\n      aria-label=\"Small\"\n      style={{\n        background: \"whitesmoke\",\n        display: \"flex\",\n        borderColor: \"grey\",\n      }}\n    />\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      {context.currentUser != null\n        ? `${context.currentUser.name} ${context.currentUser.lastName}`\n        : this.state.userName}\n    </div>\n  </InputGroup>\n</div>\n\n\n                    <div>\n                      <div></div>{\" \"}\n                      <div\n                        style={{\n                          width: \"\",\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"center\",\n                          marginTop: \"-9%\",\n                        }}\n                      >\n                        <Button\n                          variant=\"primary\"\n                          style={{ width: \"50%\", marginTop: \"8%\" }}\n                          onClick={() => {\n                            this.setState({ on1stsubmitclick: true });\n                          }}\n                        >\n                          Submit\n                        </Button>\n                        <Button\n                          style={{ width: \"50%\", marginTop: \"8%\" }}\n                          variant=\"secondary\"\n                          onClick={() => {\n                            this.handleClose();\n                          }}\n                        >\n                          Close\n                        </Button>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer\n  style={{\n    width: \"130%\",\n    backgroundColor: \"white\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  }}\n>\n  <div>\n    Hello there, we need someone for{\" \"}\n    <span style={{ color: \"red\" }}>\n      {this.state.selectedJob?.data?.jobData?.trade}\n    </span>{\" \"}\n    to:{\" \"}\n    <span style={{ color: \"red\" }}>\n      {this.state.selectedJob?.data?.jobData?.jobdescr}\n    </span>{\" \"}\n    At:{\" \"}\n    <span style={{ color: \"red\" }}>\n      {this.state.selectedJob?.data?.jobData?.joblocation}\n    </span>{\" \"}\n    Asap please, Maximum by:{\" \"}\n    <span style={{ color: \"red\" }}>\n      {this.state.selectedJob?.data?.jobData?.neededdate}\n    </span>\n    . You guys do free estimation, right?{\" \"}\n    <span style={{ color: \"green\" }}>YES?</span> AWESOME!{\" \"}\n    <span style={{ color: \"green\" }}>No?</span> how much you guys charge? the\n    best i can do is:{\" \"}\n    <span style={{ color: \"red\" }}>\n      {this.state.selectedJob?.data?.jobData?.nte}-25$\n    </span>{\" \"}\n    no? ok ok give me a minute i will ask my manager, i might be able to get\n    you:{\" \"}\n    <span style={{ color: \"red\" }}>\n      {this.state.selectedJob?.data?.jobData?.nte}\n    </span>\n  </div>\n</Modal.Footer>\n\n          </Modal>\n\n          {/* //heda te3 click on work orders in table  estimation processing*/}\n\n          <Modal\n              centered={true}\n            style={{\n              marginLeft: \"-4%\",\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n            }}\n            show={this.state.closeJobItemModal}\n            onHide={this.handleClose}\n          >\n            <Modal.Header\n              style={{\n                backgroundColor: \"white\",\n                width: \"130%\",\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n              closeButton\n            >\n              <Modal.Title\n                style={{\n                  width: \"130%\",\n\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                }}\n              >\n                Job Proccessing\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body\n              md={3}\n              style={{\n                width: \"130%\",\n                backgroundColor: \"white\",\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <Form>\n                <Row>\n                  <Col style={{ marginleft: \"-55%\" }}>\n                  <InputGroup\n                      size=\"sm\"\n                      className=\"mb-3\"\n                      style={{ width: \"93%\" }}\n                    >\n                      <InputGroup.Prepend style={{ width: \"44%\" }}>\n                        <InputGroup.Text>Tech Contact</InputGroup.Text>\n                      </InputGroup.Prepend>\n\n                      <FormControl\n                        aria-label=\"Tech Contact\"\n                        style={{\n                          background: \"whitesmoke\",\n                          borderColor: \"grey\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({\n                            jobDoneTechCon: text.target.value,\n                           \n                          });\n                          this.setState({ estimTechCon: text.target.value,})\n                        }}\n                        title={this.state.selectedDDdata}\n                      />\n                    </InputGroup>\n                    <InputGroup\n                      size=\"sm\"\n                      className=\"mb-3\"\n                      style={{ width: \"93%\" }}\n                    >\n                      <InputGroup.Prepend style={{ width: \"44%\" }}>\n                        <InputGroup.Text>Tech Name</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl\n                        aria-label=\"Tech Name\"\n                        style={{\n                          background: \"whitesmoke\",\n                          borderColor: \"grey\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({\n                            jobDoneTechName: text.target.value,\n                          });\n                          this.setState({ estimTechName: text.target.value})\n                        }}\n                        title={this.state.selectedDDdata}\n                      />\n                    </InputGroup>\n\n                   \n                    \n                    <InputGroup\n                      size=\"sm\"\n                      className=\"mb-3\"\n                      style={{ width: \"93%\", marginTop: 20 }}\n                    >\n                      <InputGroup.Prepend style={{ width: \"44%\" }}>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">\n                          Profession\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl\n                        aria-label=\"Small\"\n                        aria-describedby=\"inputGroup-sizing-sm\"\n                        style={{\n                          background: \"whitesmoke\",\n                          display: \"flex\",\n                          borderColor: \"grey\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({\n                            jobdoneTechproffesion: text.target.value,\n                            estimTechproffesion: text.target.value,\n                          });\n                        }}\n                      />\n                    </InputGroup>\n\n                    <InputGroup\n                      size=\"sm\"\n                      className=\"mb-3\"\n                      style={{ width: \"93%\", marginTop: 20 }}\n                    >\n                      <InputGroup.Prepend style={{ width: \"44%\" }}>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">\n                          NTE\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl\n                        aria-label=\"Small\"\n                        aria-describedby=\"inputGroup-sizing-sm\"\n                        style={{\n                          background: \"whitesmoke\",\n                          display: \"flex\",\n                          borderColor: \"grey\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({ jobDoneCost: text.target.value,\n                            estimCost: \"No Estim. Needed\"\n                           });\n\n                        }}\n                      />\n                    </InputGroup>\n                    <InputGroup\n                      size=\"sm\"\n                      className=\"mb-3\"\n                      style={{ width: \"93%\", marginTop: 20 }}\n                    >\n                      <InputGroup.Prepend style={{ width: \"44%\" }}>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">\n                          Scheduled Date\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl\n                        type=\"date\"\n                        aria-label=\"Small\"\n                        aria-describedby=\"inputGroup-sizing-sm\"\n                        style={{\n                          background: \"whitesmoke\",\n                          display: \"flex\",\n                          borderColor: \"grey\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({\n                            jobdonescheduledate: text.target.value,\n                            estimscheduleddate: \"No Estim. Needed\"\n                          });\n                        }}\n                      />\n                    </InputGroup>\n                    <InputGroup\n                      size=\"sm\"\n                      className=\"mb-3\"\n                      style={{ width: \"93%\", marginTop: 20 }}\n                    >\n                      <InputGroup.Prepend style={{ width: \"44%\" }}>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">\n                          Scheduled Time\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl\n                        type=\"time\"\n                        aria-label=\"Small\"\n                        aria-describedby=\"inputGroup-sizing-sm\"\n                        style={{\n                          display: \"flex\",\n                          borderColor: \"grey\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({\n                            jobdonescheduledtime: text.target.value,\n                          });\n                        }}\n                      />\n                    </InputGroup>\n                  </Col>\n\n                  <Col md={5}>\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                      <Form.Label>Note About Job</Form.Label>\n                      <Form.Control\n                        style={{\n                          width: \"110%\",\n                          display: \"flex\",\n                          backgroundColor: \"whitesmoke\",\n                          flexDirection: \"row\",\n                        }}\n                        onChange={(text) => {\n                          this.setState({\n                            jobDoneTechDescription: text.target.value,\n                            estimTechDescription: \"No Estim. Needed\",\n                          });\n                        }}\n                        as=\"textarea\"\n                        rows=\"3\"\n                      />\n                    </Form.Group>{\" \"}\n\n                   <div>\n        <InputGroup\n          size=\"sm\"\n          className=\"mb-3\"\n          style={{ width: \"110%\", marginTop: 20 }}\n        >\n          <InputGroup.Prepend style={{ width: \"44%\" }}>\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">\n              Submited Date\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormFileLabel\n            aria-label=\"Small\"\n            style={{\n              background: \"whitesmoke\",\n              display: \"flex\",\n              borderColor: \"grey\",\n            }}\n          />\n          {/* Rendering CustomComponent instead of <d> */}\n          {this.state.selectedJob && (\n            <CustomComponent\n              data={this.state.selectedJob?.data?.jobData?.submdate}\n            />\n          )}\n        </InputGroup>\n\n        <InputGroup\n          size=\"sm\"\n          className=\"mb-3\"\n          style={{ width: \"110%\", marginTop: 20 }}\n        >\n          <InputGroup.Prepend style={{ width: \"43%\" }}>\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">\n              Needed Date\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormFileLabel\n            aria-label=\"Small\"\n            style={{\n              background: \"whitesmoke\",\n              display: \"flex\",\n              borderColor: \"grey\",\n            }}\n          />\n          {/* Rendering CustomComponent instead of <d> */}\n          {this.state.selectedJob && (\n            <CustomComponent\n              data={this.state.selectedJob?.data?.jobData?.neededdate}\n            />\n          )}\n        </InputGroup>\n\n        <InputGroup\n          size=\"sm\"\n          className=\"mb-3\"\n          style={{ width: \"110%\", marginTop: 20 }}\n        >\n          <InputGroup.Prepend style={{ width: \"43%\" }}>\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">\n              Your Name\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormFileLabel\n            aria-label=\"Small\"\n            style={{\n              background: \"whitesmoke\",\n              display: \"flex\",\n              borderColor: \"grey\",\n            }}\n          />\n          {/* Rendering CustomComponent instead of <d> */}\n          <CustomComponent\n            data={\n              context.currentUser != null\n                ? context.currentUser.name +\n                  \" \" +\n                  context.currentUser.lastName\n                : this.state.userName\n            }\n          />\n        </InputGroup>\n      </div>\n\n                    <div>\n                      <div></div>{\" \"}\n                      <div\n                        style={{\n                          width: \"\",\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"center\",\n                          marginTop: \"-9%\",\n                        }}\n                      >\n                        <Button\n                          variant=\"primary\"\n                          style={{ width: \"50%\", marginTop: \"8%\" }}\n                          onClick={() => {\n                            this.setState({ onestimclicktoconfirm: true });\n                          }}\n                        >\n                          Submit\n                        </Button>\n                        <Button\n                          style={{ width: \"50%\", marginTop: \"8%\" }}\n                          variant=\"secondary\"\n                          onClick={() => {\n                            this.handleClose();\n                          }}\n                        >\n                          Close\n                        </Button>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer\n        style={{\n          width: '130%',\n          backgroundColor: 'white',\n          display: 'flex',\n          flexDirection: 'row',\n        }}\n      >\n        <div>\n          Hello there, we need someone for{' '}\n          <span style={{ color: 'red' }}>\n            {this.state.selectedJob?.data?.jobData?.trade}\n          </span>{' '}\n          to:{' '}\n          <span style={{ color: 'red' }}>\n            {this.state.selectedJob?.data?.jobData?.jobdescr}\n          </span>{' '}\n          At:{' '}\n          <span style={{ color: 'red' }}>\n            {this.state.selectedJob?.data?.jobData?.joblocation}\n          </span>{' '}\n          Asap please, Maximum by:{' '}\n          <span style={{ color: 'red' }}>\n            {this.state.selectedJob?.data?.jobData?.neededdate}\n          </span>\n          . You guys do free estimation, right?{' '}\n          <span style={{ color: 'green' }}>YES?</span> AWESOME!{' '}\n          <span style={{ color: 'green' }}>No?</span> how much you guys charge? the best I can do is:{' '}\n          <span style={{ color: 'red' }}>\n            {this.state.selectedJob?.data?.jobData?.nte}-25$\n          </span>{' '}\n          no? ok ok give me a minute I will ask my manager, I might be able to get you:{' '}\n          <span style={{ color: 'red' }}>\n            {this.state.selectedJob?.data?.jobData?.nte}\n          </span>\n        </div>\n      </Modal.Footer>\n          </Modal>\n\n          {/* //heda te3 click on work orders in table  jobdone processing*/}\n\n          <Modal\n              centered={true}\n            style={{\n              marginTop: \"15%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              width: \"100%\",\n              justifyContent: \"center\",\n            }}\n            show={this.state.onestimclicktoconfirm}\n            onHide={this.handleClose}\n          >\n            <Modal.Header\n              style={{\n                justifyContent: \"center\",\n                backgroundColor: \"whitesmoke\",\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n              closeButton\n            >\n              <Modal.Title\n                style={{\n                  justifyContent: \"center\",\n                  backgroundColor: \"whitesmoke\",\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                Confirm to Submit\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body\n              style={{\n                justifyContent: \"center\",\n                backgroundColor: \"whitesmoke\",\n              }}\n            >\n              <div className=\"input-group mb-4\">\n                <input\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    width: \"50%\",\n                    justifyContent: \"center\",\n                  }}\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"password\"\n                  onChange={(event) => {\n                    this.setState({ password: event.target.value });\n                  }}\n                />\n              </div>\n            </Modal.Body>\n            <div\n              style={{\n                // width: \"100%\",\n                justifyContent: \"center\",\n                backgroundBlendMode: \"darken\",\n                backgroundColor: \"whitesmoke\",\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              Please Enter Your Password to Confirm\n            </div>\n            <Modal.Footer\n              style={{\n                justifyContent: \"center\",\n                backgroundColor: \"whitesmoke\",\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <button\n                onClick={() => {\n                  this.onPressed();\n                  this.onSubmitJobDone(this.state.selectedJob);\n                  this.handleClose();\n                }}\n              >\n                Submit\n              </button>\n            </Modal.Footer>\n          </Modal>\n\n          {/* heda te3 confirm password to submit  schedualed job done */}\n\n          <Modal\n              centered={true}\n            style={{\n              marginTop: \"15%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              width: \"100%\",\n              justifyContent: \"center\",\n            }}\n            show={this.state.on1stsubmitclick}\n            onHide={this.handleClose}\n          >\n            <Modal.Header\n              style={{\n                justifyContent: \"center\",\n                backgroundColor: \"whitesmoke\",\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n              closeButton\n            >\n              <Modal.Title\n                style={{\n                  justifyContent: \"center\",\n                  backgroundColor: \"whitesmoke\",\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                Confirm to Submit\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body\n              style={{\n                justifyContent: \"center\",\n                backgroundColor: \"whitesmoke\",\n              }}\n            >\n              <div className=\"input-group mb-4\">\n                <input\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    width: \"50%\",\n                    justifyContent: \"center\",\n                  }}\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"password\"\n                  onChange={(event) => {\n                    this.setState({ password: event.target.value });\n                  }}\n                />\n              </div>\n            </Modal.Body>\n            <div\n              style={{\n                // width: \"100%\",\n                justifyContent: \"center\",\n                backgroundBlendMode: \"darken\",\n                backgroundColor: \"whitesmoke\",\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              Please Enter Your Password to Confirm Schedule estimation\n            </div>\n            <Modal.Footer\n              style={{\n                justifyContent: \"center\",\n                backgroundColor: \"whitesmoke\",\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <button\n                onClick={() => {\n                  // this.updateChanges.jobStatus = \"estimationScheduled\";\n                  this.onPressed();\n                  this.onSubmitEstimation(\n                    this.state.selectedJob.data.status === \"estimationScheduled\"\n                  );\n                  this.handleClose();\n                }}\n              >\n                Submit\n              </button>\n            </Modal.Footer>\n          </Modal>\n          {/* heda te3 confirm password to submit  schedualed estimation*/}\n\n    <Modal\n           style={{\n           display: \"flex\",\n           flexDirection: \"row\",\n           marginLeft: \"-4%\",\n           }}\n           show={this.state.modalDisplayWOdetails}\n           onHide={this.handleClose}\n           centered=\"true\" \n            >  <div\n          centered=\"true\" \n          style={{\n          width:\"200%\",\n          backgroundColor: \"lightblue\",\n          justifyContent: \"center\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          }}\n          >\n            STATUS:{this.state.selectedJob?.data?.status}\n          </div>\n      <Modal.Header\n            style={{\n            backgroundColor: \"white\",\n            width: \"200%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n             }}\n             closeButton\n             >\n               \n     <Row>\n          <h6 style={{color:\"green\"}}> {\"==\"} </h6> \n          <h6\n          style={{\n          display: \"flex\",\n          color:\n          this.state.selectedJob?.data?.status ===\n          \"estimationScheduled\"\n           ? \"red\"\n           : \"grey\",\n           }}\n            >  ESTIMATION  \n          </h6>\n          <h6>{\"===========>\"}</h6>\n          <h6\n             style={{\n                 display: \"flex\",\n                 color:\n                 this.state.selectedJob?.data?.status ===\n                 \"quotationPending\"\n                  ? \"red\"\n                  : \"grey\",\n                }}\n            >\n                      {\"QUOTATION\"}\n                    </h6>\n                    <h6>{\"===========>\"}</h6>\n                    <h6\n                      style={{\n                        display: \"flex\",\n                        color:\n                          (this.state.selectedJob?.data?.status ===\n                            \"jobDoneScheduled\") |\n                          \"jobDoneNeeded\"\n                            ? \"red\"\n                            : \"grey\",\n                      }}\n                    >\n                      {\"JOBDONE\"}\n                    </h6>\n                    <h6>{\"===============>\"}</h6>\n                    <h6>{\"INVOICING\"}</h6>\n                    <h6>{\"===============>\"}</h6>\n                    <h6>{\"COMPLETED\"}</h6>\n      </Row>\n      </Modal.Header>\n            {\" \"}\n     <Modal.Body\n           centered=\"true\" \n           style={{ backgroundColor: \"white\", width: \"200%\" }}\n          >\n       \n      \n\n    <Card className=\"NewWorkOrders\">\n        <Card.Body className=\"px-0 py-2\">\n          <InputGroup size=\"sm\" className=\"mb-3\">\n            \n          <div style={{ width: \"20%\", display: \"flex\", flexDirection: \"column\" }}>\n              {selectedJob && selectedJob.data && selectedJob.data.dispatcherData && (\n                <>\n                  <div>{selectedJob.data.dispatcherData.estimscheduleddate}</div>\n                  <div>{selectedJob.data.dispatcherData.estimscheduledtime}</div>\n                  <div>{selectedJob.data.dispatcherData.estimTechName}</div>\n                  <div>{selectedJob.data.dispatcherData.estimTechCon}</div>\n                  <div>{selectedJob.data.dispatcherData.estimCost}</div>\n                  <div>{selectedJob.data.dispatcherData.estimTechDescription}</div>\n                </>\n              )}\n          </div>\n          <div style={{ width: \"18%\"}}>\n\n            <div> {\"Pending\"}</div> \n            <div> {\"Approved\"}</div>\n           \n          </div>\n          <div>\n                \n           </div>\n        \n            <div  style={{ width: \"21%\", display: \"flex\", flexDirection: \"column\" }}>\n              {selectedJob && selectedJob.data && selectedJob.data.dispatcherData && (\n                <>\n                  <div>{selectedJob.data.dispatcherData.jobdonescheduledate}</div>\n                  <div>{selectedJob.data.dispatcherData.jobdonescheduledtime}</div>\n                  <div>{selectedJob.data.dispatcherData.jobDoneTechName}</div>\n                  <div>{selectedJob.data.dispatcherData.jobDoneTechCon}</div>\n                  <div>{selectedJob.data.dispatcherData.jobDoneTechproffesionzz}</div>\n                  <div>{selectedJob.data.dispatcherData.jobDoneHours}</div>\n                  <div>{selectedJob.data.dispatcherData.jobDoneTechDescription}</div>\n                </>\n              )}\n            </div>\n       \n        <div style={{ width: \"18%\"}}>\n          <div>    </div>\n\n<div> {\"Pending\"}</div> \n<div> {\"Approved\"}</div>\n</div>\n<div>\n</div>\n          </InputGroup>\n        </Card.Body>\n\n        {/* Additional content based on status */}\n        <div>\n          {selectedJob && selectedJob.data &&\n            (selectedJob.data.status === \"estimationScheduled\" ? tabEstimationbContent : null)}\n          {selectedJob && selectedJob.data &&\n            (selectedJob.data.status === \"jobDoneScheduled\" ? tabbJobdoneContent : null)}\n        </div>\n      </Card>\n      </Modal.Body>\n      <Modal.Footer\n        style={{\n           height: \"80%\",\n           backgroundColor: \"whitesmoke\",\n           width: \"200%\",\n           display: \"flex\",\n           flexDirection: \"row\",\n           }}\n        >\n      </Modal.Footer>\n     </Modal>\n\n          {/* heda te3 display job schedualled details */}\n        </div>\n        ;\n        {this.state.showTable && (\n          <div>\n            <Row\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <div>\n                <Button\n                  onClick={() => {\n                    this.setState({ estimationListModal: true });\n                  }}\n                  className=\"btn btn-primary\"\n                >\n                  {\"Estim. to schedule\"}\n                  <span style={{ color: 'red' , flexDirection: \"row\", backgroundColor:\"white\",width:\"50%\",\n                justifyContent: \"center\",\n                display: \"flex\", }}> {estimNeededCount}</span>\n                </Button>\n                <p>\n                {\"\"}{\"  | \"}    Pending :  <span style={{  color: 'red' }}> {\"\"} {estimNeededCount} {\"\"} </span> {\" | \"}   Urgent :  <span style={{ color: 'red' }}> {\"\"} {estimNeededCount}  </span> {\" | \"}\n                </p>  \n              </div>{\" \"}\n              <div\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                  display: \"flex\", \n                  width: \"8%\",\n        \n                }}\n              >\n                {\" \"}\n              </div>\n              <div>\n  <Button\n    render=\"true\" // Set render attribute to a string value\n    onClick={() => {\n      this.setState({ JobDoneListModal: true });\n    }}\n    className=\"btn btn-primary\"\n  >\n    {\"JOBS to schedule\"}   <span style={{ color: 'red' , flexDirection: \"row\", backgroundColor:\"white\",width:\"50%\",\n                justifyContent: \"center\",\n                display: \"flex\"}}>{jobDoneNeededCount}</span>\n  </Button>{\" \"}\n  <p>\n  {\"\"}{\" | \"}   Pending :  <span style={{ color: 'red' }}> {\"\"} {jobDoneNeededCount} {\"\"} </span> {\" | \"}    Urgent :  <span style={{ color: 'red' }}> {\"\"}  {jobDoneNeededCount}   </span>{\" | \"}\n  </p>\n</div>\n\n              <div\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                  display: \"flex\",\n                  width: \"8%\",\n                  \n                }}\n              >\n                {\" \"}\n              </div>\n            </Row>  \n\n <Table\n  responsive\n  hover\n  style={{ backgroundColor: \"white\" }}\n  className=\"table mt-3\"\n  id=\"tablepadding\"\n>\n  <thead>\n    <tr>\n      <th colSpan=\"3\">\n        <h5>Scheduled W.O.</h5>\n      </th>\n      <th colSpan=\"9\">\n        <h6>\n          <i className=\"fa fa-circle text-c-yellow f-10 m-r-15\">\n            <span className=\"text-c-yellow f-10 m-r-15\">estim.</span>\n          </i>\n          <i className=\"fa fa-circle text-c-blue f-10 m-r-15\">\n            <span className=\"text-c-blue f-10 m-r-15\">Job Done</span>\n          </i>\n        </h6>\n      </th>\n    </tr>\n    <tr>\n      <th>WO numb</th>\n      <th>Job location</th>\n      <th>Contact</th>\n      <th>Trade</th>\n      <th>NTE</th>\n      <th>Client Name</th>\n      <th>Submitted date</th>\n      <th>Needed Date</th>\n      <th>Urgency</th>\n      <th>Job Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    {this.state.jobList.map((item, index) => {\n      if (\n        item.data.status === \"estimationScheduled\" ||\n        item.data.status === \"jobDoneScheduled\"\n      ) {\n        return (\n          <tr\n            key={index}\n            onClick={() => {\n              this.setState({\n                modalDisplayWOdetails: true,\n                selectedJob: item,\n              });\n            }}\n            style={{\n              backgroundColor:\n                item.data.status === \"estimationScheduled\"\n                  ? \"lightyellow\"\n                  : \"lightblue\",\n            }}\n          >\n            <td>{item.data.woNum}</td>\n            <td>{item.data.jobData.joblocation}</td>\n            <td>{item.data.jobData.contact}</td>\n            <td>{item.data.jobData.trade}</td>\n            <td>{item.data.jobData.nte}</td>\n            <td>{item.data.jobData.clientName}</td>\n            <td>{item.data.jobData.submdate}</td>\n            <td>{item.data.jobData.neededdate}</td>\n            <td>{item.data.jobData.urgency}</td>\n            <td>{item.data.jobData.jobdescr}</td>\n          </tr>\n        );\n      } else {\n        // Return null if the condition isn't met to skip rendering the row\n        return null;\n      }\n    })}\n  </tbody>\n</Table>\n\n\n<Card\n  style={{\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    display: \"flex\",\n  }}\n  className=\"NewWorkOrders\"\n>\n  <Card.Header>\n    <Card.Title\n      style={{\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: \"white\",\n      }}\n      className=\"text-center\"\n      as=\"h5\"\n    >\n      <InputGroup size=\"sm\" className=\"mb-3\" style={{ width: 300 }}>\n        <InputGroup.Prepend\n          style={{\n            justifyContent: \"center\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            backgroundColor: \"white\",\n          }}\n        >\n          <Button\n            onClick={async () => {\n              this.setState({ onFindWOClick: true });\n              if (this.state.woNbSearch !== \"\") {\n                try {\n                  const resp = await findWoByNumber(\n                    this.state.woNbSearch,\n                    this.context.currentUser.uid\n                  );\n                  this.setState({ jobList: resp });\n                } catch (e) {\n                  console.log(\"Error: \", e);\n                }\n              } else {\n                const jobList = await findWoForCurrentUser(\n                  this.context.currentUser.uid\n                );\n              \n                this.setState({ jobList });\n              }\n            }}\n            className=\"btn btn-primary\"\n          >\n            Find WO\n          </Button>\n        </InputGroup.Prepend>\n        <FormControl\n          onChange={(nb) => {\n            this.setState({ woNbSearch: nb.target.value });\n          }}\n          aria-label=\"Small\"\n          aria-describedby=\"inputGroup-sizing-sm\"\n        />\n      </InputGroup>\n      Opened Work Orders\n    </Card.Title>\n  </Card.Header>\n  <Card.Body className=\"px-0 py-2\">\n    <Table\n      responsive\n      hover\n      style={{ backgroundColor: \"white\" }}\n      className=\"table mt-3\"\n      id=\"tablepadding\"\n      label=\"Scheduled W.O.\" // Changed Label to label\n    >\n      <thead>\n        <tr>\n          <th>WO numb</th>\n          <th>Job location</th>\n          <th>Contact</th>\n          <th>Trade</th>\n          <th>NTE</th>\n          <th>Client Name</th>\n          <th>Submitted date</th>\n          <th>Needed Date</th>\n          <th>Urgency</th>\n          <th>Job Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {this.state.jobList.map((item, index) => (\n          <tr\n            key={index}\n            onClick={() => {\n              this.setState({modalDisplayWOdetails\n                : true,\n                selectedJob: item,\n              });\n            }}\n          >\n            <td>{item.data.woNum}</td>\n            <td>{item.data.jobData.joblocation}</td>\n            <td>{item.data.jobData.contact}</td>\n            <td>{item.data.jobData.trade}</td>\n            <td>{item.data.jobData.nte}</td>\n            <td>{item.data.jobData.clientName}</td>\n            <td>{item.data.jobData.submdate}</td>\n            <td>{item.data.jobData.neededdate}</td>\n            <td>{item.data.jobData.urgency}</td>\n            <td>{item.data.jobData.jobdescr}</td>\n            <td\n              style={{\n                paddingTop: \"3px\",\n                display: \"flex\",\n              }}\n            ></td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  </Card.Body>\n</Card>\n\n\n          </div >\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Dispatcher;\n\n\n","import React from 'react';\n\nclass UcFirst extends React.Component {\n    render() {\n        const string = this.props.text;\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n}\n\nexport default UcFirst;","import React, { Component , useState, useEffect  } from \"react\";\nimport { MainContext } from \"../core/MainContext\";\nimport Aux from \"../hoc/_Aux\";\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport { CountryRegionData } from \"react-country-region-selector\";\nimport {\n  Row,\n  Col,\n  DropdownButton,\n  Dropdown,\n  Card,\n  Table,\n  Button,\n  InputGroup,\n  FormControl,\n  Form,\n  Collapse,\n  Modal,\n} from \"react-bootstrap\";\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getFirestore,\n  addDoc,\n  getDocs,\n  collection,\n  updateDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { CONFIG } from \"../helpers/configFb\";\nimport UcFirst from \"../App/components/UcFirst\";\nimport {\n  getTechs,\n  setTech,\n} from \"../helpers/fireStoreMain\";\n\nconst app = initializeApp(CONFIG.firebaseConfig);\nconst db = getFirestore(app);\nconst techListCollection = collection(db, 'tech-list');\n\nexport const fetchTechConData = async () => {\n  const techDataSnapshot = await getDocs(techListCollection);\n  const techData = techDataSnapshot.docs.map((doc) => doc.data().techCon);\n  return techData;\n};\n\nexport const getTechData = async () => {\n  const techDataSnapshot = await getDocs(techListCollection);\n  const techData = techDataSnapshot.docs.map(doc => doc.data());\n  return techData;\n};\n\nclass TechList extends Component {\n  static context = MainContext;\n\n  constructor(props) {\n    super(props);\n\n\n  this.getCountryValue =CountryRegionData.getCountryValue;\n\n      // ... other bindings\n      \n    this.state = {\n      showTable: true,\n      writeAccess: true,\n      techData: {\n        techId: \"\",\n        Addedby: \"\",\n        techName: \"\",\n        techCon: \"\",\n        estimCost: \"\",\n        paidby: \"\",\n        techZip: \"\",\n        techState: \"\",\n        techCoverage: 40,\n        techNote: \"\",\n        techTrade: \"\",\n        techUrgency: \"\",\n      },\n      selectedTarget:null,\n      newTechModal: false,\n      techList: [],\n      selectedTech: [],\n      filteredTech: [],\n      isMultiTarget: [],\n    };\n  }\n\n  getSuggestions = (value, field) => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    const { techList } = this.state;\n  \n    if (!inputValue || !techList || !techList.length) {\n      return [];\n    }\n  \n    return techList\n      .filter(item => {\n        const fieldValue = item.data[field]?.toLowerCase(); // Use optional chaining (?.) to avoid errors if field is undefined\n        return fieldValue && fieldValue.includes(inputValue);\n      })\n      .map(item => item.data[field]);\n  };\n  \n  \n  // ... Other methods\n  renderSuggestion = (suggestion) => <div>{suggestion}</div>;\n  componentDidMount = async () => {\n    const techList = await getTechs();\n    this.setState({ techList });\n  };\n  targetHandler = (target) => {\n    this.setState((prevState) => ({\n      selectedTarget: prevState.selectedTarget === target ? null : target,\n    }));\n  };\n  \n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState((prevState) => ({\n      techData: {\n        ...prevState.techData,\n        [name]: value,\n      },\n    }));\n  };\n\n  addTechSubmit = async () => {\n    const { techData } = this.state;\n\n    try {\n      const docRef = await addDoc(collection(db, \"tech-list\"), techData);\n\n      const newTechList = [...this.state.techList, { ...techData }];\n      this.setState({\n        techList: newTechList,\n        techData: {\n          techId: \"\",\n          Addedby: \"\",\n          freeEstim: [true],\n          techName: \"\",\n          techCon: \"\",\n          estimCost: \"\",\n          paidby: \"\",\n          techZip: \"\",\n          techState: \"\",\n          techCoverage: \"50 miles\",\n          techNote: \"\",\n          techTrade: \"\",\n          techUrgency: \"\",\n        },\n      });\n    } catch (error) {\n      console.error(\"Error adding tech:\", error);\n    }\n  };\n\n\n\nrender() {\n    const { techData } = this.state;\n    \n\n    return (\n      <>\n        <div>\n          <Button\n            onClick={() => {\n              this.setState({ newTechModal: true });\n            }}\n            variant=\"primary\"\n          >\n            Add Technician\n          </Button>\n        </div>\n\n        {this.state.showTable && (\n          <div>\n            <Card>\n              <Card.Body>\n                <Table responsive hover>\n                  <thead>\n                    <tr>\n\n                      <td>\n                        <Button\n                          onClick={() => this.targetHandler(\"target1\")}\n                          aria-controls=\"target1\"\n                          aria-expanded={this.state.selectedTarget === \"target1\"}\n                        >\n                          Zip Code\n                        </Button>\n                        <Collapse in={this.state.selectedTarget === \"target1\"}>\n                          <div id=\"target1\">\n                            <Autocomplete\n                              value={techData.techZip}\n                              onChange={(event, newValue) => {\n                                this.setState((prevState) => ({\n                                  techData: {\n                                    ...prevState.techData,\n                                    techZip: newValue,\n                                  },\n                                }));\n                              }}\n                              options={this.getSuggestions(techData.techZip, 'techZip')}\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  type=\"text\"\n                                  style={{ width: \"97%\" }}\n                                  name=\"techZip\"\n                                  placeholder=\"Search Via Zip...\"\n                                  onChange={(event) => this.handleInputChange(event)}\n                                />\n                              )}\n                            />\n                          </div>\n                        </Collapse>\n                      </td>\n                      <td>\n                      <Button\n                        onClick={() => this.targetHandler(\"target2\")}\n                        aria-controls=\"target2\"\n                        aria-expanded={this.state.selectedTarget === \"target2\"}\n                      >\n                        Tech Name\n                      </Button>\n                      <Collapse in={this.state.selectedTarget === \"target2\"}>\n                        <div id=\"target2\">\n                          <Autocomplete\n                            value={techData.techName}\n                            onChange={(event, newValue) => {\n                              this.setState((prevState) => ({\n                                techData: {\n                                  ...prevState.techData,\n                                  techName: newValue,\n                                },\n                              }));\n                            }}\n                            options={this.getSuggestions(techData.techName, 'techName')}\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                type=\"text\"\n                                style={{ width: \"97%\" }}\n                                name=\"techName\"\n                                placeholder=\"Search Via Name...\"\n                                onChange={(event) => this.handleInputChange(event)}\n                              />\n                            )}\n                          />\n                        </div>\n                      </Collapse>\n                    </td>\n\n                    <td>\n                      <Button\n                        onClick={() => this.targetHandler(\"target3\")}\n                        aria-controls=\"target3\"\n                        aria-expanded={this.state.selectedTarget === \"target3\"}\n                      >\n                        Tech Contact\n                      </Button>\n                      <Collapse in={this.state.selectedTarget === \"target3\"}>\n                        <div id=\"target3\">\n                          <Autocomplete\n                            value={techData.techCon}\n                            onChange={(event, newValue) => {\n                              this.setState((prevState) => ({\n                                techData: {\n                                  ...prevState.techData,\n                                  techCon: newValue,\n                                },\n                              }));\n                            }}\n                            options={this.getSuggestions(techData.techCon, 'techCon')}\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                type=\"text\"\n                                style={{ width: \"97%\" }}\n                                name=\"techCon\"\n                                placeholder=\"Search Via Contact...\"\n                                onChange={(event) => this.handleInputChange(event)}\n                              />\n                            )}\n                          />\n                        </div>\n                      </Collapse>\n                    </td>\n\n                        <td>\n                        <Button\n                          onClick={() => this.targetHandler(\"target4\")}\n                          aria-controls=\"target4\"\n                          aria-expanded={this.state.selectedTarget === \"target4\"}\n                        >\n                          Tech State\n                        </Button>\n                        <Collapse in={this.state.selectedTarget === \"target4\"}>\n                          <div id=\"target4\">\n                            <Autocomplete\n                              value={techData.techState}\n                              onChange={(event, newValue) => {\n                                this.setState((prevState) => ({\n                                  techData: {\n                                    ...prevState.techData,\n                                    techState: newValue,\n                                  },\n                                }));\n                              }}\n                              options={this.getSuggestions(techData.techState, 'techState')}\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  type=\"text\"\n                                  style={{ width: \"97%\" }}\n                                  name=\"techState\"\n                                  placeholder=\"Search Via State...\"\n                                  onChange={(event) => this.handleInputChange(event)}\n                                />\n                              )}\n                            />\n                          </div>\n                        </Collapse>\n                      </td>\n\n                      <td>\n                        {\" \"}\n                        <Button\n                          onClick={() => this.targetHandler(\"target5\")}\n                          aria-controls=\"target5\"\n                          aria-expanded={this.state.selectedTarget === \"target5\"}\n                        >\n                          Free Estimation\n                        </Button>\n                        <Collapse in={this.state.selectedTarget === \"target5\"}>\n                          <div id=\"target5\">\n                            <input\n                              style={{ width: 100 }}\n                              onClick={(event) =>\n                                this.handleInputKeyPress(event, \"target5\")\n                              }\n                            />\n                          </div>\n                        </Collapse>\n                      </td>\n                      <td>\n                        {\" \"}\n                        <Button>Tech Trade</Button>\n                      </td>\n                      <td>\n                        {\" \"}\n                        <Button>Tech Coverage</Button>\n                      </td>\n                      <td>\n                        {\" \"}\n                        <Button>Tech Urgency</Button>\n                      </td>\n                      <td>\n                        {\" \"}\n                        <Button>Note about tech</Button>\n                      </td>\n                      <td>\n                        <Button>Est. Cost</Button>\n                      </td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.techList.map((item, index) => (\n                      <tr key={index}>\n                        <td>{item.data.techZip}</td>\n                        <td>{item.data.techName}</td>\n                        <td>{item.data.techCon}</td>\n                        <td>{item.data.techState}</td>\n                        <td>{item.data.freeEstim}</td>\n                        <td>{item.data.techTrade}</td>\n                        <td>{item.data.techCoverage}</td>\n                        <td>{item.data.techUrgency}</td>\n                        <td>{item.data.estimCost}</td>\n                        <td>{item.data.techNote}</td>\n                        <td>{item.data.paidby}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Card>\n\n                  <Modal\n                  show={this.state.newTechModal}\n                  onHide={() => this.setState({ newTechModal: false })}\n                   >    \n                  <Modal.Header closeButton>\n                  <Modal.Title>New Technician</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                  <Form>\n                  <InputGroup className=\"mb-3\">\n                  <InputGroup.Text style={{ width: 165 }}>Technician Name</InputGroup.Text>\n                  <FormControl\n                  type=\"text\"\n                  name=\"techName\"\n                  placeholder=\"Enter tech Name...\"\n                  value={techData.techName}\n                  onChange={(event) => this.handleInputChange(event)}\n                  />\n                  </InputGroup>\n                  <InputGroup className=\"mb-3\">\n                  <InputGroup.Text style={{width:165}}>Technician Contact</InputGroup.Text>\n                  <FormControl\n                  type=\"text\"\n                  name=\"techCon\"\n                  placeholder=\"Enter tech contact...\"\n                  value={techData.techCon}\n                  onChange={(event) => this.handleInputChange(event)}\n                  />\n                  </InputGroup>\n                  <InputGroup className=\"mb-3\">\n                  <InputGroup.Text style={{width:165}}>Technician State</InputGroup.Text>\n                  <FormControl\n                  type=\"text\"\n                  name=\"techState\"\n                  placeholder=\"Enter tech State...\"\n                  value={techData.techState}\n                  onChange={(event) => this.handleInputChange(event)}\n                  />\n                  </InputGroup>\n                  <InputGroup className=\"mb-3\">\n                    <InputGroup.Text style={{width:165}}>Technician Zip</InputGroup.Text>\n                    <FormControl\n                      type=\"text\"\n                      name=\"techZip\"\n                      placeholder=\"Enter tech Zip...\"\n                      value={techData.techZip}\n                       onChange={(event) => this.handleInputChange(event)}\n                    />\n                  </InputGroup>\n                  <InputGroup className=\"mb-3\">\n        <InputGroup.Text style={{ justifyContent: \"center\", width: 165 }}>Technician Coverage</InputGroup.Text>\n        <Form.Label htmlFor=\"customRange\">\n          <span style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>{`${techData.techCoverage} Miles`}</span>\n          <FormControl\n            style={{ justifyContent: \"center\", width: 280 }}\n            defaultValue={techData.techCoverage} // Use defaultValue for uncontrolled input\n            max=\"100\"\n            min=\"0\"\n            step=\"10\"\n            id=\"customRange\"\n            type=\"range\"\n            className=\"custom-range\"\n            name=\"techCoverage\"\n            onChange={(event) => this.handleInputChange(event)}\n            title={`${techData.techCoverage} Miles`}\n          />\n        </Form.Label>\n      </InputGroup>\n        \n                  <InputGroup className=\"mb-3\">\n                    <InputGroup.Text style={{width:165}}>Technician Trade</InputGroup.Text>\n                    <FormControl\n                      type=\"text\"\n                      name=\"techTrade\"\n                      placeholder=\"Enter tech Trade...\"\n                      value={techData.techTrade}\n                       onChange={(event) => this.handleInputChange(event)}\n                    />\n                  </InputGroup>\n                  <InputGroup className=\"mb-3\">\n                    <InputGroup.Text style={{width:165}}>Technician urgency</InputGroup.Text>\n                    <FormControl\n                      type=\"text\"\n                      name=\"techUrgency\"\n                      placeholder=\"Enter tech Urgency...\"\n                      value={techData.techUrgency}\n                       onChange={(event) => this.handleInputChange(event)}\n                    />\n                  </InputGroup>\n\n                  <InputGroup className=\"mb-3\">\n                    <InputGroup.Text style={{width:165}}>Note About Tech</InputGroup.Text>\n                    <FormControl\n                      type=\"text\"\n                      name=\"techNote\"\n                      placeholder=\"Whrite Notes about Tech...\"\n                      value={techData.techNote}\n                       onChange={(event) => this.handleInputChange(event)}\n                    />\n                  </InputGroup>\n\n                  <InputGroup className=\"mb-3\">\n                  <InputGroup.Text style={{ width: 165 }}>Free Estimation</InputGroup.Text>\n                  <div style={{ marginTop: 7 }}>\n                  <Form.Check\n    \n                   style={{ marginLeft: 20, transform: \"scale(1.5)\" }}\n                   onChange={(e) => {\n                   const isChecked = e.target.checked;\n                    let selectedStatus = isChecked ? \"FREE\" : \"\";\n                    \n                    this.setState({\n                      freeEstim: isChecked,\n                      selectedStatus: selectedStatus,\n                      techData: {\n                        ...this.state.techData,\n                        estimCost: isChecked ? \"0$\" : this.state.techData.estimCost // Set estimCost based on isChecked\n                      }\n                      });\n                        }}\n                        custom\n                        id=\"checkbox2\"\n                      />\n                    </div>\n                  </InputGroup>\n\n                  {!this.state.freeEstim && ( // Render InputGroup only if freeEstim is false\n                    <InputGroup className=\"mb-3\">\n                      <InputGroup.Text style={{ width: 165 }}>Estimation Cost</InputGroup.Text>\n                      <FormControl\n                        type=\"text\"\n                        name=\"estimCost\"\n                        placeholder=\"Enter Estimation Cost...\"\n                        value={this.state.techData.estimCost}\n                        onChange={(event) => this.handleInputChange(event)}\n                      />\n                    </InputGroup>\n                  )}\n\n                  <InputGroup className=\"mb-3\">\n                  <InputGroup.Text style={{ width: 165 }}>Payment Method</InputGroup.Text>\n                  <FormControl\n                  as=\"select\"\n                  name=\"paidby\"\n                  value={techData.paidby}\n                   onChange={(event) => this.handleInputChange(event)}\n                  >\n                   <option value=\"\">Select a payment method...</option>\n                   <option value=\"CashApp\">CashApp</option>\n                   <option value=\"Zelle\">Zelle</option>\n                   <option value=\"Paypal\">Paypal</option>\n                   <option value=\"Venmo\">Venmo</option>\n                   <option value=\"Square\">Square</option>\n                  </FormControl>\n                  </InputGroup>\n\n                  </Form>\n                  </Modal.Body>\n                  <Modal.Footer>\n                  <Button\n                  variant=\"secondary\"\n                  onClick={() => this.setState({ newTechModal: false })}\n                  >\n                  Close\n                  </Button>\n                  <Button variant=\"primary\" onClick={this.addTechSubmit}>\n                  Save Changes\n                 </Button>\n                 </Modal.Footer>\n                 </Modal>\n                 \n                 </div>\n                 )}\n                 </>\n                 );\n                 }\n                 }\n\nexport default TechList;"],"names":["app","initializeApp","CONFIG","firebaseConfig","CustomComponent","getFirestore","document","getElementById","_ref","data","_jsx","style","marginLeft","display","flexDirection","justifyContent","children","Dispatcher","Component","constructor","props","super","getSuggestions","value","field","inputValue","trim","toLowerCase","techList","length","this","state","filter","item","_item$data$field","fieldValue","includes","map","fetchTechData","async","techData","getTechData","setState","error","console","renderSuggestion","suggestion","componentDidMount","getTechs","targetHandler","target","prevState","selectedTarget","handleInputChange","event","name","estimationProcess","on1stsubmitclick","on2cdsubmitclick","onestimclicktoconfirm","onFindWOClick","estimationListModal","JobDoneListModal","checkbox1Checked","onFinishOnSite","setJobStatus","selectedJob","id","then","catch","onSubmitEstimation","estimTechName","estimTechCon","estimTechproffesion","estimCost","estimPaidby","estimPaymentAdress","estimTechDescription","estimscheduleddate","estimscheduledtimee","estimTechId","jobDoneTechName","jobDoneTechCon","jobdoneTechproffesion","jobDoneCost","jobDonePaidby","jobDonePaymentAdress","jobDoneHours","jobDoneTechDescription","suppliyer","otherSuppliyer","material","jobdonescheduledate","jobdonescheduledtime","jobDoneTechId","jobType","updateDispatcherData","onSubmitJobDone","dispatcherData","DispatcherData","updateDimensions","innerWidth","window","countStatus","status","jobList","countEstimNeeded","count","estimNeededCount","countJobDoneNeeded","jobDoneNeededCount","addEventListener","context","log","currentUser","findWoForCurrentUser","uid","jobStatus","resp","a","getEstimatedPending","b","getJobDonePending","estimationPending","tostring","jobDonePending","list","handleClose","closeJobItemModal","onSubmitClick","modalDisplayWOdetails","estimationFinalize","onPressed","password","dispId","showTable","writeAccess","errorMessage","woNbSearch","subClicked","estimNeededList","jobDoneList","estimJobList","jobDoneJobList","filteredTechNames","techCon","techName","techConData","fetchTechConData","render","_this$state$selectedJ","_this$state$selectedJ2","_this$state$selectedJ3","_this$state$selectedJ4","_this$state$selectedJ5","_this$state$selectedJ6","_this$state$selectedJ7","_this$state$selectedJ8","_this$state$selectedJ9","_this$state$selectedJ10","_this$state$selectedJ11","_this$state$selectedJ12","_this$state$selectedJ13","_this$state$selectedJ14","_this$state$selectedJ15","_this$state$selectedJ16","_this$state$selectedJ17","_this$state$selectedJ18","_this$state$selectedJ19","_this$state$selectedJ20","_this$state$selectedJ21","_this$state$selectedJ22","_this$state$selectedJ23","_this$state$selectedJ24","_this$state$selectedJ25","_this$state$selectedJ26","_this$state$selectedJ27","_this$state$selectedJ28","_this$state$selectedJ29","_this$state$selectedJ30","_this$state$selectedJ31","_this$state$selectedJ32","_this$state$selectedJ33","_this$state$selectedJ34","_this$state$selectedJ35","_this$state$selectedJ36","_this$state$selectedJ37","_this$state$selectedJ38","_this$state$selectedJ39","_this$state$selectedJ40","_this$state$selectedJ41","_this$state$selectedJ42","_this$state$selectedJ43","_this$state$selectedJ44","_this$state$selectedJ45","_this$state$selectedJ46","_this$state$selectedJ47","_this$state$selectedJ48","_this$state$selectedJ49","_this$state$selectedJ50","_this$state$selectedJ51","_this$state$selectedJ52","_this$state$selectedJ53","_this$state$selectedJ54","_this$state$selectedJ55","_this$state$selectedJ56","sortedJobList","sort","dateA","Date","jobData","neededdate","dateB","today","Math","abs","tabEstimationbContent","_jsxs","Col","Button","onClick","Form","Control","marginBottom","placeholder","as","rows","tabbJobdoneContent","_Fragment","Modal","show","onHide","centered","Header","backgroundColor","width","closeButton","Title","Body","Card","className","Table","responsive","hover","index","woNum","joblocation","contact","trade","nte","clientName","submdate","urgency","jobdescr","Footer","height","paddingTop","md","Row","marginleft","InputGroup","size","Prepend","Text","Autocomplete","onChange","newValue","options","renderInput","params","TextField","type","marginTop","FormControl","background","borderColor","text","Group","controlId","Label","FormFileLabel","concat","lastName","userName","variant","color","title","selectedDDdata","backgroundBlendMode","estimscheduledtime","jobDoneTechproffesionzz","colSpan","findWoByNumber","e","nb","label","contextType","MainContext","React","db","techListCollection","collection","getDocs","docs","doc","TechList","addTechSubmit","addDoc","newTechList","techId","Addedby","freeEstim","paidby","techZip","techState","techCoverage","techNote","techTrade","techUrgency","getCountryValue","CountryRegionData","newTechModal","selectedTech","filteredTech","isMultiTarget","Collapse","in","handleInputKeyPress","htmlFor","defaultValue","max","min","step","Check","transform","isChecked","checked","selectedStatus","custom"],"sourceRoot":""}