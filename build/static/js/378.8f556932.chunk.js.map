{"version":3,"file":"static/js/378.8f556932.chunk.js","mappings":"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","sources":["MainScreen/Authentication/Administration.js","../node_modules/react-bootstrap/esm/DropdownButton.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React from \"react\";\n\nimport {\n  getDocs,\n  collection,\n  addDoc,\n  getFirestore,\n  doc,\n  setDoc,\n} from \"firebase/firestore\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { CONFIG } from \"../../helpers/configFb\";\nimport {\n  Button,\n  Dropdown,\n  DropdownButton,\n  Modal,\n  Table,\n} from \"react-bootstrap\";\nimport { TableBody } from \"semantic-ui-react\";\nimport { getUser } from \"../../helpers/fireStoreMain\";\n\nconst app = initializeApp(CONFIG.firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nclass Administration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false,\n      email: \"\",\n      password: \"\",\n      openAddUser: false,\n      name: \"\",\n      lastName: \"\",\n      phoneNumber: \"\",\n      selectedtype: \"Dispatcher\",\n      typesData: [\"Admin\", \"Manager\", \"Team leader\", \"Dispatcher\", \"dataTeam\"],\n      userList:[],\n    };\n    \n  }\n\n  componentDidMount = async () => {\n    const userList = await getUser();\n    this.setState({ userList });\n  };\n\n\n  registerWithEmailAndPassword = async () => {\n    const { name, lastName, email, password, phoneNumber, selectedtype } =\n      this.state;\n    console.log(\"registerWithEmailAndPassword\", auth, email, password);\n    try {\n      const res = await createUserWithEmailAndPassword(auth, email, password);\n      console.log(\"registerWithEmailAndPasswordtttt\", res);\n      const user = res.user;\n      await setDoc(doc(db, \"Users\", user.uid), {\n        uid: user.uid,\n        name,\n        lastName,\n        email,\n        password,\n        phoneNumber,\n        selectedtype,\n        authProvider: \"local\",\n      });\n    } catch (err) {\n      console.error(\"123456789777777\", err);\n      alert(err.message);\n    }\n  };\n\n  buttonpressed = () => {\n    const { username, email, password } = this.state;\n    console.log(\"button pressed\");\n    this.registerWithEmailAndPassword(username, email, password);\n  };\n\n  handleClose = () => {\n    this.setState({ openAddUser: false });\n  };\n\n  render() {\n    const { name, lastName, email, password, phoneNumber } = this.state;\n    return (\n      <div>\n        <button\n          onClick={() => {\n            this.setState({ openAddUser: true });\n          }}\n          className=\"btn btn-primary\"\n        >\n          Add User\n        </button>\n        <div>\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Last Name</th>\n                <th>Email</th>\n                <th>Password</th>\n                <th>Phone Number</th>\n                <th>Title</th>\n              </tr>\n            </thead>\n            <tbody>\n            {this.state.userList.map((item, index) => (\n                      <tr key={index}>\n                        <td>{item.data.user}</td>\n                      </tr>\n                    ))}\n\n            </tbody>\n          </Table>\n        </div>\n        <Modal show={this.state.openAddUser} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>New User</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n              <span\n                style={{ width: \"40%\" }}\n                className=\"input-group-text\"\n                id=\"clientname-label\"\n              >\n                Name\n              </span>\n              <input\n                style={{ backgroundColor: \"whitesmoke\" }}\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Enter client name...\"\n                value={name}\n                onChange={(event) =>\n                  this.setState({ name: event.target.value })\n                }\n              />\n            </div>\n            <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n              <span\n                style={{ width: \"40%\" }}\n                className=\"input-group-text\"\n                id=\"clientname-label\"\n              >\n                Last Name\n              </span>\n              <input\n                style={{ backgroundColor: \"whitesmoke\" }}\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Enter Last name...\"\n                value={lastName}\n                onChange={(event) =>\n                  this.setState({ lastName: event.target.value })\n                }\n              />\n            </div>\n            <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n              <span\n                style={{ width: \"40%\" }}\n                className=\"input-group-text\"\n                id=\"clientname-label\"\n              >\n                Email\n              </span>\n              <input\n                style={{ backgroundColor: \"whitesmoke\" }}\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Enter Email ...\"\n                value={email}\n                onChange={(event) =>\n                  this.setState({ email: event.target.value })\n                }\n              />\n            </div>\n            <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n              <span\n                style={{ width: \"40%\" }}\n                className=\"input-group-text\"\n                id=\"clientname-label\"\n              >\n                Password\n              </span>\n              <input\n                style={{ backgroundColor: \"whitesmoke\" }}\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Enter Password...\"\n                value={password}\n                onChange={(event) =>\n                  this.setState({ password: event.target.value })\n                }\n              />\n            </div>\n            <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n              <span\n                style={{ width: \"40%\" }}\n                className=\"input-group-text\"\n                id=\"clientname-label\"\n              >\n                Phone Number\n              </span>\n              <input\n                style={{ backgroundColor: \"whitesmoke\" }}\n                type=\"number\"\n                className=\"form-control\"\n                placeholder=\"Enter Phone Numer...\"\n                value={phoneNumber}\n                onChange={(event) =>\n                  this.setState({ phoneNumber: event.target.value })\n                }\n              />\n            </div>\n            <div>\n              <DropdownButton\n                onSelect={(e) => {\n                  console.log(\"DropDownButtonOnChange\", e);\n                  this.setState({ selectedtype: this.state.typesData[e] });\n                }}\n                title={this.state.selectedtype}\n              >\n                <Dropdown.Item eventKey=\"0\">\n                  {this.state.typesData[0]}\n                </Dropdown.Item>\n                <Dropdown.Item eventKey=\"1\">\n                  {this.state.typesData[1]}\n                </Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">\n                  {this.state.typesData[2]}\n                </Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">\n                  {this.state.typesData[3]}\n                </Dropdown.Item>\n                <Dropdown.Item eventKey=\"4\">\n                  {this.state.typesData[4]}\n                </Dropdown.Item>\n              </DropdownButton>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                this.handleClose();\n              }}\n            >\n              Close\n            </Button>\n            <Button\n              variant=\"primary\"\n              onClick={() => {\n                this.registerWithEmailAndPassword();\n                this.handleClose();\n              }}\n            >\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Administration;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return /*#__PURE__*/React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});"],"names":["app","initializeApp","CONFIG","firebaseConfig","auth","getAuth","db","getFirestore","Administration","React","constructor","props","super","componentDidMount","async","userList","getUser","this","setState","registerWithEmailAndPassword","name","lastName","email","password","phoneNumber","selectedtype","state","console","log","res","createUserWithEmailAndPassword","user","setDoc","doc","uid","authProvider","err","error","alert","message","buttonpressed","username","handleClose","openAddUser","pressed","typesData","render","_jsxs","children","_jsx","onClick","className","Table","responsive","map","item","index","data","Modal","show","onHide","Header","closeButton","Title","Body","style","width","id","backgroundColor","type","placeholder","value","onChange","event","target","DropdownButton","onSelect","e","title","Dropdown","Item","eventKey","Footer","Button","variant","_excluded","propTypes","PropTypes","href","isRequired","disabled","menuAlign","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","bsPrefix","size","_ref","ref","_objectWithoutPropertiesLoose","_extends","DropdownToggle","childBsPrefix","DropdownMenu","align","role","renderOnMount","displayName","p","classNames"],"sourceRoot":""}