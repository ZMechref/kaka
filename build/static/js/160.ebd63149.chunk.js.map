{"version":3,"file":"static/js/160.ebd63149.chunk.js","mappings":"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","sources":["MainScreen/TeamLeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/DropdownButton.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { doc, getFirestore, updateDoc } from \"firebase/firestore\";\nimport { map } from \"jquery\";\nimport React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Button,\n  DropdownButton,\n  Dropdown,\n  Modal,\n} from \"react-bootstrap\";\nimport { MainContext } from \"../core/MainContext\";\nimport { CONFIG } from \"../helpers/configFb\";\nimport {\n  getJobs,\n  handleDeleteJob,\n  setJob,\n  updateAssignedTo,\n} from \"../helpers/fireStoreMain\";\nimport DEMO from \"../store/constant\";\nconst app = initializeApp(CONFIG.firebaseConfig);\nconst db = getFirestore(app);\n\nclass teamLeader extends Component {\n  static contextType = MainContext;\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      datta: [\n        {\n          woNum: \"John Doe\",\n          joblocation: \"28\",\n          contact: \"New York\",\n          trade: \"1\",\n          nte: \"2\",\n          ivrcode: \"3\",\n          poNumb: \"4\",\n          clientName: \"5\",\n          submdate: \"6\",\n          neededdate: \"7\",\n          urgency: \"8\",\n          callerName: \"9\",\n          jobdescr: \"10\",\n        },\n      ],\n      itemToEdit: [\n        {\n          jobType: \"\",\n          estimTechName: \"\",\n          estimTechCon: \"\",\n          estimDate: \"\",\n          estimTime: \"\",\n          estimCost: \"\",\n          estimPaidby: \"\",\n          estimPaymentAdress: \"\",\n          jobDoneTechName: \"\",\n          jobDoneTechCon: \"\",\n          jobDoneDate: \"\",\n          jobDoneTime: \"\",\n          jobDoneCost: \"\",\n          jobDonePaidby: \"\",\n          jobDonePaymentAdress: \"\",\n          jobDoneHours: \"\",\n          techDescription: \"\",\n          dispId: this.setState.selectAuser,\n          suppliyer: \"\",\n          otherSuppliyer: \"\",\n          material: \"\",\n          proffision: \"\",\n          scheduleddate: \"\",\n          currentuser: \"teamleader\",\n        },\n      ],\n      showselectdispatcher: false,\n      selectAuser: \"Select a Dispatcher\",\n      selectedUser: { selectedtype: \"Select Dispatcher\" },\n      woNum: \"\",\n      joblocation: \"\",\n      contact: \"\",\n      trade: \"\",\n      nte: \"\",\n      ivrcode: \"\",\n      poNumb: \"\",\n      clientName: \"\",\n      submdate: \"\",\n      neededdate: \"\",\n      urgency: \"\",\n      callerName: \"\",\n      jobdescr: \"\",\n      jobList: [],\n      showModal: false,\n      selectedMan: \"\",\n      selectedDisp: \"\",\n      selectedTeamLeader: \"\",\n      selectedStatus: \"\",\n      selectedUName: \"Select Assignee\",\n      selectedUserClient: \"Select Assignee\",\n      selectedIndex: \"0\",\n    };\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  componentDidMount = async () => {\n    const context = this.context;\n    const jobList = await getJobs();\n    this.setState({ jobList }, () => {\n      this.setState({});\n    });\n  };\n\n  async handleFormSubmit(event) {\n    event.preventDefault(); // prevent the page from reloading\n\n    // create a new object with the data from the input fields\n    const newItem = {\n      woNum: this.state.woNum,\n      manager: this.state.selectedMan,\n      teamLeader: this.state.selectedTeamLeader,\n      dispatcher: this.state.selectedDisp,\n      status: this.state.selectedStatus,\n      assignedTo: this.state.selectedUName,\n      assignedby: this.state.currentuser,\n      //managerData\n      jobData: {\n        joblocation: this.state.joblocation,\n        contact: this.state.contact,\n        trade: this.state.trade,\n        nte: this.state.nte,\n        ivrcode: this.state.ivrcode,\n        poNumb: this.state.poNumb,\n        clientName: this.state.clientName,\n        submdate: this.state.submdate,\n        neededdate: this.state.neededdate,\n        urgency: this.state.urgency,\n        callerName: this.state.callerName,\n        jobdescr: this.state.jobdescr,\n        urgency: this.state.urgency,\n      },\n      //teamLeaderData\n      teamLeaderData: {},\n      //dispatcherData\n      dispatcherData: {\n        jobType: \"\",\n        estimTechName: \"\",\n        estimTechCon: \"\",\n        estimDate: \"\",\n        estimTime: \"\",\n        estimCost: \"\",\n        estimPaidby: \"\",\n        estimPaymentAdress: \"\",\n        jobDoneTechName: \"\",\n        jobDoneTechCon: \"\",\n        jobDoneDate: \"\",\n        jobDoneTime: \"\",\n        jobDoneHours: \"\",\n        jobDoneCost: \"\",\n        jobDonePaidby: \"\",\n        jobDonePaymentAdress: \"\",\n        dispId: \"\",\n        suppliyer: \"\",\n        otherSuppliyer: \"\",\n        material: \"\",\n        proffision: \"\",\n      },\n    };\n    setJob(newItem).then(async (id) => {\n      const docId = doc(db, \"Jobs\", id);\n      await updateDoc(docId, {\n        jobId: id,\n      });\n      const jobList = await getJobs();\n      console.log(\"const jobList = await getJobs();\", jobList);\n      this.setState({ jobList });\n    });\n    // add the new item to the datta array\n    this.setState({\n      datta: [...this.state.datta, newItem],\n      woNum: \"\",\n      joblocation: \"\",\n      contact: \"\",\n      trade: \"\",\n      nte: \"\",\n      ivrcode: \"\",\n      poNumb: \"\",\n      clientName: \"\",\n      submdate: \"\",\n      neededdate: \"\",\n      urgency: \"\",\n      callerName: \"\",\n      jobdescr: \"\",\n    });\n  }\n\n  handleClose = () => {\n    this.setState({ showModal: false });\n  };\n\n  openModal = () => {\n    this.setState({ showModal: true });\n  };\n\n  render() {\n   \n    const context = this.context;\n    const { showselectdispatcher } = this.state;\n    const {\n      datta,\n      woNum,\n      joblocation,\n      contact,\n      trade,\n      nte,\n      ivrcode,\n      poNumb,\n      clientName,\n      submdate,\n      neededdate,\n      urgency,\n      callerName,\n      jobdescr,\n      showModal,\n    } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <div>\n            <div>\n              <Card\n                className=\"Recent-Users\"\n                tyle={{ display: \"flex\", flexDirection: \"row\" }}\n              >\n                <div\n                  tyle={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    wight: \"100%\",\n                  }}\n                >\n                  {\n                    \" ....................................................................................\"\n                  }\n                  {\n                    \" New Work Orders.............................................................................................\"\n                  }\n                </div>\n                <Card.Body\n                  className=\"px-0 py-2\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    wight: \"165%\",\n                  }}\n                >\n                  <Table responsive hover>\n                    <tbody>\n                      {this.state.jobList.map((item, index) => {\n                     \n                        if (item.data.assignedby === \"manager\") {\n                          return (\n                            <tr\n                              style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                width: \"100%\",\n                              }}\n                              key={index}\n                            >\n                              {/* <td>\n                                <DropdownButton\n                                  onSelect={(e) => {\n                                    let selected = \"\";\n                                    if (e.includes(\"user\")) {\n                                      selected = context.dispatchersList[e[0]];\n                                      console.log(\n                                        \"user new\",\n                                        selected,\n                                        e[0],\n                                        e\n                                      );\n                                    }\n                                    this.setState(\n                                      {\n                                        selectedUser: selected,\n                                        selectedUName: selected\n                                          ? selected.name + selected.lastName\n                                          : \"\",\n                                      },\n                                      () => {\n                                        console.log(\n                                          `''''''''''''''''';;;;;;;;`,\n                                          selected\n                                        );\n                                      }\n                                    );\n                                  }}\n                                  title={\n                                    this.state.selectedUser\n                                      ? `${this.state.selectedUser.name}  ${this.state.selectedUser.lastName}`\n                                      : \"Select a user\"\n                                  }\n                                >\n                                  {context.dispatchersList.map(\n                                    (item, index) => {\n                                      return (\n                                        <Dropdown.Item\n                                          key={`${item.id}${index}user`}\n                                          eventKey={`${index}user`}\n                                        >\n                                          {item.name} {item.lastName}\n                                        </Dropdown.Item>\n                                      );\n                                    }\n                                  )}\n                                </DropdownButton>\n                              </td> */}\n                              <td>\n                                <a\n                                  onClick={(e) => {\n                                    console.log(\"REJJJJEEEEECCTTTTTTTTTTT\", e);\n                                    handleDeleteJob(item.data.jobId).then(\n                                      async () => {\n                                        const jobList = await getJobs();\n                                        console.log(\n                                          \"const jobList = await getJobs();\",\n                                          jobList\n                                        );\n                                        this.setState({ jobList });\n                                      }\n                                    );\n                                  }}\n                                  href={DEMO.BLANK_LINK}\n                                  className=\"label theme-bg2 text-white f-12\"\n                                >\n                                  Reject\n                                </a>\n                                <a\n                                  href={DEMO.BLANK_LINK}\n                                  onClick={(e) => {\n                                    console.log(\n                                      \"AAAAPPPPRRRRREEEEEOOOOVVEEEE\",\n                                      item\n                                    );\n\n                                    this.setState({\n                                      showselectdispatcher: true,\n                                      selectedjob: item,\n                                    });\n                                  }}\n                                  className=\"label theme-bg text-white f-12\"\n                                >\n                                  Approve\n                                </a>\n                              </td>\n                              <td>{item.data.woNum}</td>\n                              <td>{item.data.jobData.joblocation}</td>\n                              <td>{item.data.jobData.trade}</td>\n                              <td>{item.data.jobData.nte}</td>\n                              <td>{item.data.jobData.clientName}</td>\n                              <td>{item.data.jobData.neededdate}</td>\n                              <td>{item.data.jobData.urgency}</td>\n                              <td>{item.data.jobData.jobdescr}</td>\n                              <td\n                                style={{ paddingTop: \"3px\", display: \"flex\" }}\n                              ></td>\n                            </tr>\n                          );\n                        }\n                        return null;\n                      })}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </div>\n          </div>\n        </form>\n\n        <table\n          style={{ backgroundColor: \"white\" }}\n          className=\"table mt-3\"\n          id=\"tablepadding\"\n        >\n          <thead>\n            <tr>\n              <th>WO numb</th>\n              <th>Job location</th>\n              <th>contact</th>\n              <th>Trade</th>\n              <th>NTE</th>\n              <th>IVR Code</th>\n              <th>Po Number</th>\n              <th>Client Name</th>\n              <th>Submitted date</th>\n              <th>Needed Date</th>\n              <th>Urgency</th>\n              <th>Caller Name</th>\n              <th>Job Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.jobList.map((item, index) => {\n              if (item.data.assignedby === \"TeamLeader\") {\n                return (\n                  <tr key={index}>\n                    <td>{item.data.woNum}</td>\n                    <td>{item.data.jobData.joblocation}</td>\n                    <td>{item.data.jobData.contact}</td>\n                    <td>{item.data.jobData.trade}</td>\n                    <td>{item.data.jobData.nte}</td>\n                    <td>{item.data.jobData.ivrcode}</td>\n                    <td>{item.data.jobData.poNumb}</td>\n                    <td>{item.data.jobData.clientName}</td>\n                    <td>{item.data.jobData.submdate}</td>\n                    <td>{item.data.jobData.neededdate}</td>\n                    <td>{item.data.jobData.urgency}</td>\n                    <td>{item.data.jobData.callerName}</td>\n                    <td>{item.data.jobData.jobdescr}</td>\n                    <td\n                      style={{\n                        paddingTop: \"3px\",\n                        display: \"flex\",\n                      }}\n                    >\n                      <DropdownButton\n                        onSelect={async (e) => {\n                          console.log(\"DropDownButtonOnChange\", e);\n\n                          if (e === \"1\") {\n                            await handleDeleteJob(item.data.jobId);\n                            const jobList = await getJobs();\n                            this.setState({ jobList });\n                          } else if (e === \"0\") {\n                            this.openModal();\n                            this.setState({\n                              itemToEdit: item.data,\n                              editItemIndex: index,\n                            });\n                          }\n                        }}\n                        title={\"\"}\n                      >\n                        <Dropdown.Item eventKey=\"0\">Edit</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"1\">Delete</Dropdown.Item>\n                      </DropdownButton>\n                    </td>\n                  </tr>\n                );\n              }\n            })}\n          </tbody>\n        </table>\n\n        <Modal show={showselectdispatcher} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit WO</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div style={{ backgroundColor: \"red\", width: \"100%\" }}>\n              <DropdownButton\n                onSelect={(e) => {\n                  let selected = \"\";\n                  if (e.includes(\"user\")) {\n                    selected = context.dispatchersList[e[0]];\n                    console.log(\"user new\", selected, e[0], e);\n                  }\n                  this.setState(\n                    {\n                      selectedUser: selected,\n                      selectedUName: selected\n                        ? selected.name + selected.lastName\n                        : \"\",\n                    },\n                    () => {\n                      console.log(`''''''''''''''''';;;;;;;;`, selected);\n                    }\n                  );\n                }}\n                title={\n                  this.state.selectedUser\n                    ? `${this.state.selectedUser.name}  ${this.state.selectedUser.lastName}`\n                    : \"Select a user\"\n                }\n              >\n                {context.dispatchersList.map((item, index) => {\n                  return (\n                    <Dropdown.Item\n                      key={`${item.id}${index}user`}\n                      eventKey={`${index}user`}\n                    >\n                      {item.name} {item.lastName}\n                    </Dropdown.Item>\n                  );\n                })}\n              </DropdownButton>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"primary\"\n              onClick={() => {\n                const data = {\n                  assignedTo: this.state.selectedDisp,\n                };\n                updateAssignedTo(this.state.selectedjob.data.dispId, data).then(\n                  async () => {\n                    const jobList = await getJobs();\n                    console.log(\"const jobList = await getJobs();\", jobList);\n                    this.setState({ jobList });\n                    showModal = false;\n                  }\n                );\n              }}\n            >\n              Submit\n            </Button>\n            <Button\n              style={{ width: \"50%\", marginTop: \"8%\" }}\n              variant=\"secondary\"\n              onClick={() => {\n                this.handleClose();\n              }}\n            >\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal show={showModal} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Proccess WO</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div style={{ width: \"100%\" }}>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"wo-number-label\"\n                >\n                  Wo #\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter wo Number...\"\n                  aria-label=\"WoNumber\"\n                  aria-describedby=\"woNumber-label\"\n                  value={this.state.itemToEdit.woNum}\n                  onChange={(event) =>\n                    this.setState({ woNum: event.target.value })\n                  }\n                />\n              </div>\n\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"job-location-label\"\n                >\n                  Job Location\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter job location...\"\n                  aria-label=\"JobLocation\"\n                  aria-describedby=\"joblocation-label\"\n                  value={joblocation}\n                  onChange={(event) =>\n                    this.setState({ joblocation: event.target.value })\n                  }\n                />\n              </div>\n\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"contact-label\"\n                >\n                  Contact\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter phone number...\"\n                  aria-label=\"Contact\"\n                  aria-describedby=\"contact-label\"\n                  value={contact}\n                  onChange={(event) =>\n                    this.setState({ contact: event.target.value })\n                  }\n                />\n              </div>\n\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"trade-label\"\n                >\n                  Trade\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Trade type...\"\n                  aria-label=\"Trade\"\n                  aria-describedby=\"trade-label\"\n                  value={trade}\n                  onChange={(event) =>\n                    this.setState({ trade: event.target.value })\n                  }\n                />\n              </div>\n\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"nte-label\"\n                >\n                  NTE\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter nte...\"\n                  aria-label=\"NTE\"\n                  aria-describedby=\"nte-label\"\n                  value={nte}\n                  onChange={(event) =>\n                    this.setState({ nte: event.target.value })\n                  }\n                />\n              </div>\n\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"ivrcode-label\"\n                >\n                  Ivr Code\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter ivr code...\"\n                  aria-label=\"IvrCode\"\n                  aria-describedby=\"ivrcode-label\"\n                  value={ivrcode}\n                  onChange={(event) =>\n                    this.setState({ ivrcode: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"poNumb-label\"\n                >\n                  Po Number\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Po Number...\"\n                  aria-label=\"PoNumber\"\n                  aria-describedby=\"ponumber-label\"\n                  value={poNumb}\n                  onChange={(event) =>\n                    this.setState({ poNumb: event.target.value })\n                  }\n                />\n              </div>\n            </div>\n            <div style={{ width: \"100%\" }}>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"clientname-label\"\n                >\n                  Client Name\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter client name...\"\n                  aria-label=\"ClientName\"\n                  aria-describedby=\"clientname-label\"\n                  value={clientName}\n                  onChange={(event) =>\n                    this.setState({ clientName: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"submdate-label\"\n                >\n                  Submitted Date\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"date\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Submitted Date...\"\n                  aria-label=\"Submitteddate\"\n                  aria-describedby=\"submdate-label\"\n                  value={submdate}\n                  onChange={(event) =>\n                    this.setState({ submdate: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"neededdate-label\"\n                >\n                  Needed date\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"date\"\n                  className=\"form-control\"\n                  placeholder=\"Enter needed date...\"\n                  aria-label=\"NeededDate\"\n                  aria-describedby=\"neededdate-label\"\n                  value={neededdate}\n                  onChange={(event) =>\n                    this.setState({ neededdate: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"urgency-label\"\n                >\n                  Urgency\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Urgency...\"\n                  aria-label=\"Urgency\"\n                  aria-describedby=\"urgency-label\"\n                  value={urgency}\n                  onChange={(event) =>\n                    this.setState({ urgency: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"callername-label\"\n                >\n                  Caller Name\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Caller Name...\"\n                  aria-label=\"CallerName\"\n                  aria-describedby=\"callername-label\"\n                  value={callerName}\n                  onChange={(event) =>\n                    this.setState({ callerName: event.target.value })\n                  }\n                />\n              </div>\n              <div style={{ width: \"100%\" }} className=\"input-group mb-3\">\n                <span\n                  style={{ width: \"40%\" }}\n                  className=\"input-group-text\"\n                  id=\"jobdescr-label\"\n                >\n                  Job Description\n                </span>\n                <input\n                  style={{ backgroundColor: \"whitesmoke\" }}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Detailled job description...\"\n                  aria-label=\"JobDescription\"\n                  aria-describedby=\"jobdescr-label\"\n                  value={jobdescr}\n                  onChange={(event) =>\n                    this.setState({ jobdescr: event.target.value })\n                  }\n                />\n              </div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer handleClose>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n            <Button\n              variant=\"primary\"\n              onClick={this.handleFormSubmit}\n              closeButton\n            >\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default teamLeader;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return /*#__PURE__*/React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});"],"names":["app","initializeApp","CONFIG","firebaseConfig","db","getFirestore","teamLeader","Component","constructor","props","super","componentDidMount","async","this","context","jobList","getJobs","setState","handleClose","showModal","openModal","state","datta","woNum","joblocation","contact","trade","nte","ivrcode","poNumb","clientName","submdate","neededdate","urgency","callerName","jobdescr","itemToEdit","jobType","estimTechName","estimTechCon","estimDate","estimTime","estimCost","estimPaidby","estimPaymentAdress","jobDoneTechName","jobDoneTechCon","jobDoneDate","jobDoneTime","jobDoneCost","jobDonePaidby","jobDonePaymentAdress","jobDoneHours","techDescription","dispId","selectAuser","suppliyer","otherSuppliyer","material","proffision","scheduleddate","currentuser","showselectdispatcher","selectedUser","selectedtype","selectedMan","selectedDisp","selectedTeamLeader","selectedStatus","selectedUName","selectedUserClient","selectedIndex","handleFormSubmit","bind","event","preventDefault","newItem","manager","dispatcher","status","assignedTo","assignedby","jobData","teamLeaderData","dispatcherData","setJob","then","docId","doc","id","updateDoc","jobId","console","log","render","_jsxs","children","_jsx","onSubmit","Card","className","tyle","display","flexDirection","wight","Body","style","Table","responsive","hover","map","item","index","data","width","onClick","e","handleDeleteJob","href","DEMO","BLANK_LINK","selectedjob","paddingTop","backgroundColor","DropdownButton","onSelect","editItemIndex","title","Dropdown","Item","eventKey","Modal","show","onHide","Header","closeButton","Title","selected","includes","dispatchersList","name","lastName","concat","Footer","Button","variant","updateAssignedTo","marginTop","type","placeholder","value","onChange","target","contextType","MainContext","_excluded","CardImg","React","_ref","ref","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","bg","text","border","body","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","Img","Subtitle","Link","Text","ImgOverlay","propTypes","PropTypes","isRequired","disabled","menuAlign","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","size","DropdownToggle","childBsPrefix","DropdownMenu","align","role","renderOnMount","p"],"sourceRoot":""}